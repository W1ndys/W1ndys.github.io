<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>W1ndysの小屋</title>
  <icon>https://www.gravatar.com/avatar/e816d21ed3bf42ec40aacb363b0f1e86</icon>
  <subtitle>W1ndys’s blog</subtitle>
  <link href="https://w1ndys.github.io/atom.xml" rel="self"/>
  
  <link href="https://w1ndys.github.io/"/>
  <updated>2023-12-31T17:05:40.878Z</updated>
  <id>https://w1ndys.github.io/</id>
  
  <author>
    <name>W1ndys</name>
    <email>w1ndys@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记录我的2023年</title>
    <link href="https://w1ndys.github.io/2023/12/31/my2023/"/>
    <id>https://w1ndys.github.io/2023/12/31/my2023/</id>
    <published>2023-12-31T13:58:05.089Z</published>
    <updated>2023-12-31T17:05:40.878Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简单记录自己的-2023-年"><a href="#简单记录自己的-2023-年" class="headerlink" title="简单记录自己的 2023 年"></a>简单记录自己的 2023 年</h1><blockquote><p>看到朋友圈都在晒，也一直想记录一下自己的 2023 年，想不到有什么好的方法，看到康哥用博客记录，我也跟风写一下吧。</p><p>非常庆幸自己有一本大厚日记本，不如真不知道怎么写这篇博文</p><p>截止目前日记本已经写完三个本子了，记忆里大概是从高一下学期开始写一直到现在（虽然最近一个月没写，大抵是没空了）</p><p><span style="color:#FF0000;"> 呼呼光这一篇就写了快一个小时 </span></p></blockquote><p><img src="/img/my2023/%E6%97%A5%E8%AE%B0%E6%9C%AC.jpg" srcset="/img/loading.gif" lazyload alt="日记本"></p><h2 id="孟春之月（一月）"><a href="#孟春之月（一月）" class="headerlink" title="孟春之月（一月）"></a>孟春之月（一月）</h2><p>翻开日记发现竟然没有 1 月，那 1 月我到底干了些什么呢，打开相册回忆一下。</p><p>原因竟然是 <strong>疫情</strong>！1 月大概是大一上学期刚放寒假，那时候还在疫情时代，大家都阳了没什么好写的。</p><p><img src="/img/my2023/%E5%9B%9E%E5%AE%B6.jpg" srcset="/img/loading.gif" lazyload alt="日记本"></p><h2 id="仲春之月（二月）"><a href="#仲春之月（二月）" class="headerlink" title="仲春之月（二月）"></a>仲春之月（二月）</h2><p>大一上初识 CTF，但是也没什么入门，一直处在门外边的水平</p><p>整个寒假算是我 CTF 学习阶段进步比较大的一段时间，用一个寒假来入了一下门，知道了什么是编码，什么是 IDA，什么是加壳脱壳……</p><p>放一波刷题记录</p><p>大概是从 2 月开始跑步减肥的（虽然只减了十几斤，而且现在已经吃回来了）</p><div style="display: flex; justify-content: center;">    <figure style="margin-right: 20px;">        <img src="/img/my2023/编码.png" srcset="/img/loading.gif" lazyload alt="buu刷题记录" style="max-width: 100%;">        <figcaption> Caption for Image 1 </figcaption>    </figure>    <figure>        <img src="/img/my2023/ctfshow刷题.png" srcset="/img/loading.gif" lazyload alt="ctfshow刷题记录" style="max-width: 100%;">        <figcaption> Caption for Image 2 </figcaption>    </figure></div><p>一入网安深似海，从此 hacker 不能改</p><p>从小一个黑客梦，还是想感叹 <span style="color:#FF0000;"> 高考能考到自己喜欢的专业是多么幸福的一件事 </span></p><h2 id="季春之月（三月）"><a href="#季春之月（三月）" class="headerlink" title="季春之月（三月）"></a>季春之月（三月）</h2><p>三月就已经开学上课了，一开始听课还能听点，结果是越来越不听了吧</p><p>三月的时候还挺爱打羽毛球的，现在怎么不打了</p><p>三月学院 <a href="https://mp.weixin.qq.com/s/nuZqsShR668drH-b8POC-w">班歌比赛</a>，负责剪辑班歌视频，嘻嘻，荣获一等奖，当时还跟朋友们拍了一张合影（照片里面现在貌似只剩我没对象了 hhhhh）</p><p><img src="/img/my2023/%E5%90%88%E5%BD%B1.jpg" srcset="/img/loading.gif" lazyload alt="合影"></p><h2 id="孟夏之月（四月）"><a href="#孟夏之月（四月）" class="headerlink" title="孟夏之月（四月）"></a>孟夏之月（四月）</h2><p>四月发生的印象最深的事情就是烫了个发吧，当时还觉得蛮好看的</p><p>现在已经剪没了，也没再继续烫。</p><p><img src="/img/my2023/%E7%83%AB%E5%8F%91.jpg" srcset="/img/loading.gif" lazyload alt="烫发"></p><h2 id="仲夏之月（五月）"><a href="#仲夏之月（五月）" class="headerlink" title="仲夏之月（五月）"></a>仲夏之月（五月）</h2><p>四月五月是打扮自己最多的几个月（大概是受食人鱼的指点了吧🤔不过也确实学到点东西）</p><p>跟好鸽们打电话时候的正规军。</p><p><img src="/img/my2023/gwl%E8%A7%86%E9%A2%91%E7%94%B5%E8%AF%9D.jpg" srcset="/img/loading.gif" lazyload alt="视频电话"></p><p>在毕业晚会幕后道具工作</p><div style="display: flex; align-items: flex-start;">    <div style="flex: 1; text-align: center;">        <img src="/img/my2023/毕业晚会门票.jpg" srcset="/img/loading.gif" lazyload alt="毕业晚会门票" style="width: 85%; vertical-align: top;">        <p style="text-align: center;"> 毕业晚会门票 </p>    </div>    <div style="flex: 1; text-align: center;">        <img src="/img/my2023/毕业晚会幕后.jpg" srcset="/img/loading.gif" lazyload alt="毕业晚会幕后" style="width: 100%; vertical-align: bottom;">        <p style="text-align: center;"> 毕业晚会幕后 </p>    </div></div><p>5 月 20 号简历设计大赛二等奖 <span style="color:#FF0000;"> 证书 </span> 发下来了</p><p>5 月 30 号，二阳了</p><h2 id="季夏之月（六月）"><a href="#季夏之月（六月）" class="headerlink" title="季夏之月（六月）"></a>季夏之月（六月）</h2><p>这个月一开始看了历史文化学院的最美汉服代言人表演，太惊艳了，全是戏曲</p><p><img src="/img/my2023/%E6%B1%89%E6%9C%8D%E4%BB%A3%E8%A8%80%E4%BA%BA.jpg" srcset="/img/loading.gif" lazyload alt="最美汉服代言人"></p><p>上课看完了深海哈哈哈哈，物理课不听课看电影，挺有教育意义的一部动画电影</p><p><img src="/img/my2023/%E6%B7%B1%E6%B5%B7.jpg" srcset="/img/loading.gif" lazyload alt="深海"></p><p>填了积极分子相关资料</p><p>在百佳宿舍评选幕后，也是这时候认识了 myk 师哥</p><p><img src="/img/my2023/%E7%99%BE%E4%BD%B3%E5%AE%BF%E8%88%8D.jpg" srcset="/img/loading.gif" lazyload alt="百佳宿舍"></p><p>献血最光荣嘻嘻，我不在意最后这一袋血会拿去干什么，至于他是否被卖掉或者被浪费，我不关心，但行好事莫问前程</p><p><img src="/img/my2023/%E7%8C%AE%E8%A1%80.jpg" srcset="/img/loading.gif" lazyload alt="献血"></p><p>月末放暑假假回家咯</p><p><img src="/img/my2023/%E6%9A%91%E5%81%87%E6%94%BE%E5%81%87.jpg" srcset="/img/loading.gif" lazyload alt="暑假极爱"></p><p>讲真的，这次回家是为了考驾照，如果不是为了考驾照，我是真的想留校学习的，毕竟还有很多东西要学。</p><h2 id="孟秋之月（七月）"><a href="#孟秋之月（七月）" class="headerlink" title="孟秋之月（七月）"></a>孟秋之月（七月）</h2><p>考驾照的第一个月，下半身没做防晒，从脚踝开始上面是黑的下面是白的，已经是泾渭分明了</p><p><img src="/img/my2023/%E8%85%BF%E5%AD%90.jpg" srcset="/img/loading.gif" lazyload alt="黑白分明"></p><p>好在科一到科四都一把过，科二满分，驾照到手，也算没白费</p><h2 id="仲秋之月（八月）"><a href="#仲秋之月（八月）" class="headerlink" title="仲秋之月（八月）"></a>仲秋之月（八月）</h2><p>8 月多久已经快开学了，我实在是在家待不住了，提前返校学一会，不得不说，一个人是真的舒服</p><p>见证了日本核污水不负责任排放大海</p><p><img src="/img/my2023/%E6%9B%B2%E9%98%9C%E6%B1%BD%E8%BD%A6%E7%AB%99.jpg" srcset="/img/loading.gif" lazyload></p><p>8 月 23 一次突发奇想，做了大学时代的第一个面向全校的公益项目（也不能说是项目）——<a href="https://w1ndys.top/2023/09/01/QFNU_Course_Selection_Guide_North/#/">曲阜师范大学选课指北</a>，旨在帮助大家选择合适的任课老师</p><p>目前已经有 120+参与贡献者，浏览量 4w+</p><p><img src="/img/my2023/%E9%80%89%E8%AF%BE%E6%8C%87%E5%8C%97.png" srcset="/img/loading.gif" lazyload alt="image-20231231234930273"></p><h2 id="季秋之月（九月）"><a href="#季秋之月（九月）" class="headerlink" title="季秋之月（九月）"></a>季秋之月（九月）</h2><p>九月迎新，大一新生开学了，也是又老了一年，接了两个师弟。</p><p>然后紧张激烈的纳新也开始了，出席了社团管理部的宣讲，网络空间安全协会的宣讲，还有有关于逆向等方面的知识（虽然我也很菜）</p><h2 id="孟冬之月（十月）"><a href="#孟冬之月（十月）" class="headerlink" title="孟冬之月（十月）"></a>孟冬之月（十月）</h2><p>十月一回来之后就长胖了，再也没减下去</p><p>认识了几个大一的师弟师妹，都挺好的，好学又调皮可爱</p><p>然后就是去山东警察学院打了省赛，跟着师哥去打了科来杯，人生第一次线下赛，总体体验还是学到很多东西的，特别是让我明白人外有人，自己永远是菜狗</p><p><a href="https://w1ndys.top/2023/10/29/CTF_think_kelai_10/#/">科来杯心得</a></p><p><img src="https://w1ndys.top/img/%E7%A7%91%E6%9D%A5%E6%9D%AF10/%E5%B1%B1%E4%B8%9C%E8%AD%A6%E5%AF%9F%E5%AD%A6%E9%99%A2.jpg" srcset="/img/loading.gif" lazyload alt="山东警察学院大门"></p><p><img src="/img/my2023/%E7%A7%91%E6%9D%A5%E6%9D%AF.jpg" srcset="/img/loading.gif" lazyload alt="科来杯"></p><h2 id="仲冬之月（十一月）"><a href="#仲冬之月（十一月）" class="headerlink" title="仲冬之月（十一月）"></a>仲冬之月（十一月）</h2><p>十一月在迎新晚会幕后主持道具组</p><p><a href="https://w1ndys.top/2023/11/30/CTF_think_jnxl2023/#/">参加了技能兴鲁网络安全技能挑战赛</a></p><p><img src="/img/my2023/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81.jpg" srcset="/img/loading.gif" lazyload alt="技能兴鲁"></p><p><img src="https://w1ndys.top/img/jnxl2023/1701356901716.jpg" srcset="/img/loading.gif" lazyload></p><p>好大儿送的一本刑法，旨在叫我好好遵守网络安全法，将来做一个白帽子不要误入歧途</p><p><img src="/img/my2023/%E5%A5%BD%E5%A4%A7%E5%84%BF.png" srcset="/img/loading.gif" lazyload alt="好大儿"></p><h2 id="季冬之月（十二月）"><a href="#季冬之月（十二月）" class="headerlink" title="季冬之月（十二月）"></a>季冬之月（十二月）</h2><p>已经沦为卷比的形状了捏😭😭😭😭😭😭</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;简单记录自己的-2023-年&quot;&gt;&lt;a href=&quot;#简单记录自己的-2023-年&quot; class=&quot;headerlink&quot; title=&quot;简单记录自己的 2023 年&quot;&gt;&lt;/a&gt;简单记录自己的 2023 年&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;看到朋友圈都在晒，</summary>
      
    
    
    
    <category term="随笔" scheme="https://w1ndys.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="随笔" scheme="https://w1ndys.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="W1ndys年度总结" scheme="https://w1ndys.github.io/tags/W1ndys%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>怎样理解离散数学中的自反 反自反 对称 反对称与传递？</title>
    <link href="https://w1ndys.github.io/2023/12/30/How_to_understand_antisymmetry_and_transfer_of_reflexive_antireflexive_symmetry_in_discrete_mathematics/"/>
    <id>https://w1ndys.github.io/2023/12/30/How_to_understand_antisymmetry_and_transfer_of_reflexive_antireflexive_symmetry_in_discrete_mathematics/</id>
    <published>2023-12-30T08:12:44.375Z</published>
    <updated>2023-12-30T08:14:14.053Z</updated>
    
    <content type="html"><![CDATA[<p>看到一个很好的很容易理解的解释。</p><p>首先你应该理解“关系”Relation</p><p>比如你有一个集合X（通俗地说就是一类东西），某些元素之间（比如x、y）之间有某一种关系R，就记做R(x,y)。</p><p>这个关系可以是“x和y认识”，或者“x比y大”，或者“x和y发生过<strong>关系</strong>”（对就是你想的意思）或者是任意你说了算的关系，你说他两有关系就有关系。</p><p>自反：对于任意X的元素x、必有R(x,x)。虽然不太直观，因为一般语境下“关系”是两个对象的。但是我可以举一个例子，比如X&#x3D;班级，x&#x3D;小明，R&#x3D;同班。那么小明一定和自己同班，所以R(x,x)。</p><p>反自反：就是任意的x不满足R(x,x)。比如关系R是“我是你爸爸”，那么显然任意的x都不是自己的爸爸，所以“我是你爸爸”满足反自反性质。</p><p>对称：R(x,y)则R(y,x)。还是“同班”的例子，“我是你同学”意味着“你是我同学”；或者结婚，我和你结婚，你必然和我结婚等等。（这里“意味着”就是推导）。</p><p>反对称：R(x,y)则R(y,x)不成立。“我是你爸爸”就满足反对称，因为“我是你爸爸”不意味着“你是我爸爸”</p><p>传递性：如果R(x,y)和R(y,z)则R(x,z)。比如“同班”这个时（特定班级，不是“同过班”）就是传递的。再比如“直系血亲”就是传递的，比如爸爸的爸爸是爷爷。</p><p>不传递（注意，不是反传递）：很多关系都不满足传递性，“朋友”，“我是你爸爸”，“接过吻”就不满足。</p><p>总的来说，如果一个关系满足“反身，对称，传递”，那么这个关系就叫“等价关系”，也就是“分类关系”。也可以反过来理解，所有“分类关系”里面，必然满足“反身，对称，传递”。</p><blockquote><p>转载</p></blockquote><blockquote><p>作者：伍易东<br>链接：<a href="https://www.zhihu.com/question/426552337/answer/1536598149">https://www.zhihu.com/question/426552337/answer/1536598149</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;看到一个很好的很容易理解的解释。&lt;/p&gt;
&lt;p&gt;首先你应该理解“关系”Relation&lt;/p&gt;
&lt;p&gt;比如你有一个集合X（通俗地说就是一类东西），某些元素之间（比如x、y）之间有某一种关系R，就记做R(x,y)。&lt;/p&gt;
&lt;p&gt;这个关系可以是“x和y认识”，或者“x比y大”</summary>
      
    
    
    
    <category term="离散数学" scheme="https://w1ndys.github.io/categories/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/"/>
    
    <category term="关系" scheme="https://w1ndys.github.io/categories/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E5%85%B3%E7%B3%BB/"/>
    
    
    <category term="离散数学" scheme="https://w1ndys.github.io/tags/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>本博客免责声明</title>
    <link href="https://w1ndys.github.io/2023/12/23/Disclaimer/"/>
    <id>https://w1ndys.github.io/2023/12/23/Disclaimer/</id>
    <published>2023-12-23T04:56:04.482Z</published>
    <updated>2023-12-23T04:56:45.092Z</updated>
    
    <content type="html"><![CDATA[<p>在使用本教程前，请务必阅读并理解以下内容。使用本教程即代表您同意以下用户协议：</p><ol><li><strong>用户协议</strong>：使用本教程即表示您同意遵守本免责声明和用户协议。若您不同意此协议，请勿使用本教程提供的信息和指南。</li><li><strong>个人责任</strong>：本教程所提供的信息仅供参考，使用者需自行承担因使用产品A而产生的任何风险和后果。</li><li><strong>消费责任</strong>：使用本教程涉及的任何消费或购买行为与本人无关，用户需自行对其行为负责并承担相应风险。</li><li><strong>禁止转载</strong>：未经本人允许，严禁对本教程内容进行转载或再分发。任何未经授权的转载行为都将被视为侵权行为。</li><li><strong>结果不保证</strong>：本教程提供的建议和技巧并不能保证用户能够取得特定的结果或效果。实际使用中的成果可能因个人技能、环境差异或其他因素而有所不同。</li></ol><p>在使用本教程提供的信息前，请谨慎考虑个人能力和环境因素，并在必要时寻求专业建议。对于因使用本教程而产生的任何问题或损失，我们概不负责。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在使用本教程前，请务必阅读并理解以下内容。使用本教程即代表您同意以下用户协议：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;用户协议&lt;/strong&gt;：使用本教程即表示您同意遵守本免责声明和用户协议。若您不同意此协议，请勿使用本教程提供的信息和指南。&lt;/li&gt;
&lt;li&gt;&lt;st</summary>
      
    
    
    
    <category term="随笔" scheme="https://w1ndys.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="随笔" scheme="https://w1ndys.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>手把手教你注册Google账号</title>
    <link href="https://w1ndys.github.io/2023/12/23/Google_account/"/>
    <id>https://w1ndys.github.io/2023/12/23/Google_account/</id>
    <published>2023-12-22T16:58:25.403Z</published>
    <updated>2023-12-23T07:35:38.244Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Google账号的注册教程"><a href="#Google账号的注册教程" class="headerlink" title="Google账号的注册教程"></a>Google账号的注册教程</h1><blockquote><p>本部分基于<a href="https://blog.csdn.net/qq_45138120/article/details/131347452#/">这篇文章</a>进行编辑，致敬</p></blockquote><ol><li>首先打开浏览器，然后进入设置把浏览器设置成英文语言，来提高成功率</li></ol><p>特别说明一下，<span style="color:#FF0000;">是浏览器的总语言，在浏览器设置里，而不只是设置当前页面的语言</span></p><ol><li>我们使用浏览器打开谷歌邮箱官网（<a href="http://gmail.google.com/">http://gmail.google.com/</a> ），进入谷歌邮箱的登录主页，我们点击左下方的创建账号按钮，选择个人用途（为我自己）</li></ol><p><img src="/img/Google/Google1.png" srcset="/img/loading.gif" lazyload alt="账号注册"></p><ol start="3"><li>在进入的界面我们不要着急填写资料，我们先修改语言，点击左下方的简体中文。这个时候，会弹出国家语言列表，我们选择“English（United States）”。</li></ol><p><img src="/img/Google/Google2.png" srcset="/img/loading.gif" lazyload alt="语言"></p><ol start="4"><li>这个时候，界面会变成英语。输入姓氏和名字，点击 Next</li></ol><p><img src="/img/Google/Google3.png" srcset="/img/loading.gif" lazyload alt="在这里插入图片描述"></p><ol start="4"><li>选择月份、日、年、性别，点击Next</li></ol><p><img src="/img/Google/Google4.png" srcset="/img/loading.gif" lazyload alt="日期"></p><ol start="5"><li>选择Gmail邮箱地址，前两个是随机出的邮箱地址，可以勾选第三个自定义邮箱地址，输入邮箱地址后，点击 Next</li></ol><p><img src="/img/Google/Google5.png" srcset="/img/loading.gif" lazyload alt="在这里插入图片描述"></p><ol start="6"><li><p>输入密码，确认密码后，点击 Next</p><p><img src="/img/Google/Google6.png" srcset="/img/loading.gif" lazyload alt="在这里插入图片描述"></p></li><li><p>添加恢复电子邮件，账号异常或锁定时，Google 可以通过恢复电子邮件联系您。直接点击 Skip 跳过</p></li></ol><p><img src="/img/Google/Google7.png" srcset="/img/loading.gif" lazyload alt="在这里插入图片描述"></p><ol start="8"><li>选择中国，填写自己的手机号，点击Next</li></ol><p>关于手机号无法用于验证的问题，可以看这一位大佬的帖子：<a href="https://blog.csdn.net/qaqwqaqwq/article/details/130442226#/">https://blog.csdn.net/qaqwqaqwq/article/details/130442226#/</a></p><p>这个问题与我一开始写的第一步相呼应，开头切换英文主要就是为了解决这边</p><p><img src="/img/Google/Google8.png" srcset="/img/loading.gif" lazyload alt="在这里插入图片描述"></p><ol start="9"><li>确认账户信息页面，没问题的话，点击 Next</li></ol><p><img src="/img/Google/Google9.png" srcset="/img/loading.gif" lazyload alt="在这里插入图片描述"></p><ol start="10"><li>隐私条款确认，拉取到底部，点击 I agree 我同意</li></ol><p><img src="/img/Google/Google10.png" srcset="/img/loading.gif" lazyload alt="image-20231223005705473"></p><ol start="11"><li>如图，出现此界面，说明 Google 邮箱创建成果</li></ol><p><img src="/img/Google/Google11.png" srcset="/img/loading.gif" lazyload alt="在这里插入图片描述"></p><p>注：创建失败时</p><ul><li>手机号码已经注册过</li><li>在注册时，将语言设置为英语，成功率高</li><li>切换节点</li><li>过会再试试</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Google账号的注册教程&quot;&gt;&lt;a href=&quot;#Google账号的注册教程&quot; class=&quot;headerlink&quot; title=&quot;Google账号的注册教程&quot;&gt;&lt;/a&gt;Google账号的注册教程&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;本部分基于&lt;a href=</summary>
      
    
    
    
    <category term="手把手教程" scheme="https://w1ndys.github.io/categories/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E7%A8%8B/"/>
    
    <category term="Google" scheme="https://w1ndys.github.io/categories/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E7%A8%8B/Google/"/>
    
    
    <category term="手把手教程系列" scheme="https://w1ndys.github.io/tags/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>手把手教你使用ChatGPT3.5</title>
    <link href="https://w1ndys.github.io/2023/12/21/ChatGPT3.5/"/>
    <id>https://w1ndys.github.io/2023/12/21/ChatGPT3.5/</id>
    <published>2023-12-21T15:34:31.287Z</published>
    <updated>2023-12-24T08:01:19.755Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>爆肝一晚上写完教程，且看且珍惜</p><p>本教程未经允许禁止转载，来源：<a href="http://www.w1ndys.top/">www.w1ndys.top</a></p><p>本教程所涉及所有操作均已通过本机测试，出现其他情况均属于个人机器问题</p><p>本教程编写耗时 <font color='red'> 160 分钟 </font> 且浏览完全免费，且看且珍惜</p></blockquote><p>前排提醒：使用 ChatGPT 涉及 3.8-38.8 不等的付费内容，介意请立即退出</p><blockquote><p>截止 2023 年 12 月 23 日 16: 29: 07，已有成功案例，证明全过程是无问题的，最容易出现问题的是手机号的部分，注意设置好语言就可以</p></blockquote><p>前排提醒，已有成功案例，跟着来就行，教程没任何问题</p><p><img src="/img/ChatGPT/PixPin_2023-12-24_15-58-46.png" srcset="/img/loading.gif" lazyload></p><p><img src="/img/ChatGPT/PixPin_2023-12-24_15-59-24.png" srcset="/img/loading.gif" lazyload></p><h1 id="工具准备"><a href="#工具准备" class="headerlink" title="工具准备"></a>工具准备</h1><ol><li><p>一台能上网的 <span style="color:#FF0000; border:1px solid #FF3333;"> 电脑 </span>，注意非常推荐使用电脑，否则会遇到很多未知问题</p></li><li><p>Google Chrome（推荐）</p><p>没有 Google 的可以用 Windows 自带的 Edge 浏览器</p></li><li><p>一个魔法工具（梯子）</p><p><font color="#3333FF"> 需要特别注意的是，使用本工具 <span style="border:1px solid #808080;"> 有一定的流量计费 </span>，3.8-38.8 不等，根据自己需要选择 </font>，此费用也不是我本人收取，而是流量的提供方收取，特别注意这点 <font color="#FF0000" size=5> 如果你 <span style="border:1px solid #000000;"> 介意此费用 </span>，你可以 <span style="border:1px solid #990099;"> 关闭此页面 </span> 退出阅读了。</font> 具体注意事项下面会提到</p></li><li><p>一双灵敏的眼睛（不是</p></li><li><p>一个耐心看教程的好习惯（不是</p></li><li><p>一颗真诚的心和 <font color='red'> 良好的态度 </font>，有问题 <a href="https://qm.qq.com/q/9n506oZ8Ri&personal_qrcode_source=4">联系博主</a></p></li></ol><h1 id="开始操作"><a href="#开始操作" class="headerlink" title="开始操作"></a>开始操作</h1><h2 id="爬墙工具的介绍和安装使用"><a href="#爬墙工具的介绍和安装使用" class="headerlink" title="爬墙工具的介绍和安装使用"></a>爬墙工具的介绍和安装使用</h2><h3 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h3><p><font color="#FF3333"> 这些你都不需要记，看看就行 </font></p><ul><li><p>虚拟专用网络(Virtual Private Network，VPN)是专用网络的延伸，它包含了类似 Internet 的共享或公共网络链接。通过 VPN 可以以模拟点对点专用链接的方式通过共享或公共网络在两台计算机之间发送数据。</p></li><li><p>如果说得再通俗一点，VPN 实际上是 “线路中的线路”，类型于城市大道上的 “公交专用线”，所不同的是，由 VPN 组成的 “线路” 并不是物理存在的，而是通过技术手段模拟出来，即是 “虚拟” 的。不过，这种虚拟的专用网络技术却可以在一条公用线路中为两台计算机建立一个逻辑上的专用 “通道”，它具有良好的保密和不受干扰性，使双方能进行自由而安全的点对点连接，因此被网络管理员们非常广泛地关注着。</p></li><li><p>通过虚拟专用网，我们在家就可以轻松安全的登录到公司的内部网络上，这样可以实现我们在家办公的梦想了。</p></li></ul><h3 id="账号注册"><a href="#账号注册" class="headerlink" title="账号注册"></a>账号注册</h3><p>有了这个工具，你不只是能进 ai，还可以高速浏览 GitHub 等网站，以及…………</p><p>微信搜索公众号关注：  <code> W1ndys_Official</code> 或扫描下方二维码</p><p>发送：GPT 工具，即可获得链接</p><p><img src="/img/VPN/wx.png" srcset="/img/loading.gif" lazyload alt="注册"></p><p>输入邮箱密码注册账号，注册完成后登陆</p><p><img src="/img/VPN/%E6%B3%A8%E5%86%8C%E8%B4%A6%E5%8F%B7.png" srcset="/img/loading.gif" lazyload alt="注册"></p><p>然后点击左侧购买订阅</p><p><img src="/img/VPN/%E8%AE%A2%E9%98%85.png" srcset="/img/loading.gif" lazyload alt="订阅"></p><p>根据需求选择你合适的方案，如果你只是想尝鲜的话，毫无疑问，选最便宜的，能用就行</p><p><img src="/img/VPN/%E8%B4%AD%E4%B9%B0%E8%AE%A2%E9%98%85.png" srcset="/img/loading.gif" lazyload alt="购买订阅"></p><p>我本人用的是 <font color="#FF0000"> 38.8 巨量不限时，推荐这个 </font>，大约可以用 2 年左右，平均下来大约 0.6&#x2F;天，而且是实打实的买多少用多少，不会出现超时浪费</p><p>买完之后点击左上方仪表盘可以看到你的已订阅</p><p><img src="/img/VPN/%E4%BB%AA%E8%A1%A8%E7%9B%98.png" srcset="/img/loading.gif" lazyload alt="仪表盘"></p><p>然后点击仪表盘下方的使用文档</p><p><img src="/img/VPN/%E5%AE%A2%E6%88%B7%E7%AB%AF.png" srcset="/img/loading.gif" lazyload alt="客户端安装"></p><p>选择你的系统安装客户端</p><p>安装完之后登陆客户端就可以看到这样</p><p><img src="/img/VPN/%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90.png" srcset="/img/loading.gif" lazyload alt="安装完成"></p><h3 id="连接节点"><a href="#连接节点" class="headerlink" title="连接节点"></a>连接节点</h3><p>目前为止已经基本结束了，点击连接，点进去选个绿色的节点，点全局，<font color="#FF0000"> 如果后续出现连接失败就换个节点 </font></p><p><img src="/img/VPN/%E8%8A%82%E7%82%B9.png" srcset="/img/loading.gif" lazyload alt="节点"></p><h2 id="Google-账号的注册"><a href="#Google-账号的注册" class="headerlink" title="Google 账号的注册"></a>Google 账号的注册</h2><p><span style="background:#FF8000;"> 注意 </span>：<span style="font-size:1.1em; color:#FF3399;"> 有 ChatGPT 账号的可以跳过此步骤，有 Google 账号的可以跳过此步骤，有 Apple 账号的可以先直接试试第三步，如果不行再回来本步骤 </span></p><p>（本质上来讲 Microsoft 账号也是可以的，但是我试过了，大陆手机号注册的 Microsoft 不可用，所以这里就一笔带过）</p><p>（需要一直开着步骤一的工具）</p><p>关于 Google 账号如何注册可以看下面链接另一篇博客</p><p><a href="https://w1ndys.top/2023/12/23/Google_account/">https://w1ndys.top/2023/12/23/Google_account/</a></p><h2 id="进入-OpenAI-官网"><a href="#进入-OpenAI-官网" class="headerlink" title="进入 OpenAI 官网"></a>进入 OpenAI 官网</h2><p>（需要一直开着步骤一的工具）</p><p>进入这个网站：<a href="https://chat.openai.com/">https://chat.openai.com/</a></p><p>点击 login</p><p><img src="/img/ChatGPT/image-1.png" srcset="/img/loading.gif" lazyload alt="image-20231223010822238"></p><p>点继续使用 Google（另外有 Apple 可选 Apple 但后面需不需要别的认证我不知道，买不起果子没试过）</p><p>（本质上来讲 Microsoft 账号也是可以的，但是我试过了，大陆手机号注册的 Microsoft 不可用，所以这里就一笔带过）</p><p><img src="/img/ChatGPT/image-20231223010933294.png" srcset="/img/loading.gif" lazyload alt="image-20231223010933294"></p><p>然后选择刚注册好的账号登陆之后就可以用了</p><p><img src="/img/ChatGPT/image-20231223010959130.png" srcset="/img/loading.gif" lazyload alt="image-20231223010959130"></p><p>放一张使用截图</p><p><img src="/img/ChatGPT/image-20231223011402732.png" srcset="/img/loading.gif" lazyload alt="image-20231223011402732"></p><hr><h1 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h1><p>在使用本教程前，请务必阅读并理解以下内容。使用本教程即代表您同意以下用户协议：</p><ol><li><strong>用户协议</strong>：使用本教程即表示您同意遵守本免责声明和用户协议。若您不同意此协议，请勿使用本教程提供的信息和指南。</li><li><strong>个人责任</strong>：本教程所提供的信息仅供参考，使用者需自行承担因使用产品 A 而产生的任何风险和后果。</li><li><strong>消费责任</strong>：使用本教程涉及的任何消费或购买行为与本人无关，用户需自行对其行为负责并承担相应风险。</li><li><strong>禁止转载</strong>：未经本人允许，严禁对本教程内容进行转载或再分发。任何未经授权的转载行为都将被视为侵权行为。</li><li><strong>结果不保证</strong>：本教程提供的建议和技巧并不能保证用户能够取得特定的结果或效果。实际使用中的成果可能因个人技能、环境差异或其他因素而有所不同。</li></ol><p>在使用本教程提供的信息前，请谨慎考虑个人能力和环境因素，并在必要时寻求专业建议。对于因使用本教程而产生的任何问题或损失，我们概不负责。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;爆肝一晚上写完教程，且看且珍惜&lt;/p&gt;
&lt;p&gt;本教程未经允许禁止转载，来源：&lt;a href=&quot;http://www.w1ndys.top/&quot;&gt;www.w1ndys.top&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本教程所涉及所有操作均已通过本机测试，出现其他情况均属</summary>
      
    
    
    
    <category term="手把手教程" scheme="https://w1ndys.github.io/categories/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E7%A8%8B/"/>
    
    <category term="ChatGPT" scheme="https://w1ndys.github.io/categories/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E7%A8%8B/ChatGPT/"/>
    
    
    <category term="手把手教程系列" scheme="https://w1ndys.github.io/tags/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>ChatLearning————学群友说话使用手册</title>
    <link href="https://w1ndys.github.io/2023/12/13/bot_ChatLearning/"/>
    <id>https://w1ndys.github.io/2023/12/13/bot_ChatLearning/</id>
    <published>2023-12-13T06:51:34.087Z</published>
    <updated>2023-12-13T06:56:10.487Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><ul><li><a href="https://github.com/project-mirai/mirai-api-http">mirai-api-http</a> 配置 <code>http adapter</code> ， <code>singleMode</code> 为 <code>false</code> 为了保证稳定性，请尽量使用mirai-api-http v2.3.3版本</li><li>配置 <code>data.json</code></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br> <span class="hljs-attr">&quot;Key&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xxxxx&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// 在mirai-api-http中设置的密钥,若使用singleMode也不需要校验,设置为&quot;&quot;即可</span><br> <span class="hljs-attr">&quot;host&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// mirai-api-http中设置的地址（若设置成0.0.0.0，请填写127.0.0.1）</span><br> <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;8080&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// mirai-api-http中设置的端口</span><br> <span class="hljs-attr">&quot;qq&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xxx&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment">// 在mirai登陆的QQ号</span><br> <span class="hljs-attr">&quot;session&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xxx&quot;</span> <span class="hljs-comment">// 无需修改</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><ul><li>Windows双击 <code>ChatLearning.exe</code> 直接运行</li><li>Linux在<code>cd</code>到目录后使用<code>./ChatLearning</code>运行</li><li>Win7或以下的32位系统(包括32位的Linux)则需下载<strong>Source包</strong>并确保Python版本≥3.6使用 <code>pip install -r requirements.txt</code> 安装依赖后运行 <code>Chatmain.py</code></li></ul><blockquote><p>首次使用在控制台使用 <code>setadmin &lt;QQ号,多个请用空格隔开&gt;</code> 设置管理员； <code>blackfreq &lt;次数&gt;</code> 设置黑名单容错次数</p></blockquote><h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><p>控制台下可执行指令，发送 <code>help</code> 获取指令表；管理员在聊天环境下私聊bot执行指令时，加上指令前缀 <code>！</code> 或 <code>!</code></p><table><thead><tr><th align="left">基本</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>help</code></td><td align="left">指令表</td></tr><tr><td align="left"><code>check</code></td><td align="left">查看词库的问答个数和属性设置</td></tr><tr><td align="left"><code>admin</code></td><td align="left">进入管理模式</td></tr><tr><td align="left"><code>learning </code></td><td align="left">开启&#x2F;关闭记录</td></tr><tr><td align="left"><code>reply</code></td><td align="left">开启&#x2F;关闭回复</td></tr><tr><td align="left"><code>voicereply</code></td><td align="left">开启&#x2F;关闭文字转语音回复</td></tr><tr><td align="left"><code>setadmin  &lt;QQ&gt;</code></td><td align="left">设置管理员QQ号，有多个用空格隔开</td></tr></tbody></table><hr><table><thead><tr><th align="left">属性</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>globe</code></td><td align="left">开启&#x2F;关闭总词库</td></tr><tr><td align="left"><code>cosmatch</code></td><td align="left">开启&#x2F;关闭问题余弦相似度计算</td></tr><tr><td align="left"><code>cosmatch &lt;匹配率&gt;</code></td><td align="left">设定问题余弦相似度计算匹配率阈值</td></tr><tr><td align="left"><code>blackfreq &lt;次数&gt;</code></td><td align="left">设置黑名单容错次数</td></tr><tr><td align="left"><code>merge &lt;单位/秒&gt;</code></td><td align="left">间隔多长时间合成一次总词库</td></tr><tr><td align="left"><code>learning &lt;单位/秒&gt;</code></td><td align="left">词库链间隔时间</td></tr><tr><td align="left"><code>typefreq &lt;消息类型&gt; &lt;次数&gt;</code></td><td align="left">为消息类型设置回复阈值</td></tr><tr><td align="left"><code>voicereply</code></td><td align="left">开启&#x2F;关闭文字转语音回复</td></tr><tr><td align="left"><code>reply &lt;百分比&gt;</code></td><td align="left">回复概率，若没有触发也不会触发文字转语音</td></tr><tr><td align="left"><code>replywait &lt;基准时间&gt; &lt;浮动时间&gt;</code></td><td align="left">设置回复时的等待时间（基准时间±浮动时间）</td></tr><tr><td align="left"><code>replycd &lt;秒&gt;</code></td><td align="left">设置回复的冷却时间</td></tr><tr><td align="left"><code>voicereply  &lt;百分比&gt;</code></td><td align="left">文字转语音概率，若没有触发将会继续发送文字</td></tr></tbody></table><ul><li>回复阈值：Bot获取到答案时，需要这个答案在词库中<strong>重复出现</strong>的次数<strong>大于或者等于这个阈值</strong>时，才会回复</li><li>黑名单容错次数：根据你设置的敏感词，达到次数自动将对象拉入黑名单后，不记录此人所有的发言。</li><li>全局模式：未启用全局模式时，每个群的词库独立且实时生效（分群词库），上一秒从群中收集到一个词，下一秒就可以在本群中回复这个词。开启全局模式后，bot将采用由所有分群词库定时合成的总词库回复</li><li>词库链间隔时间：发消息后多长时间会进入空窗期，比如设置10s，一个人发完一条消息10s内没人继续说话，就会将10s后的第一条消息作为问，再下一条就是答，可能没什么卵用，毕竟群里经常上话不接下话，不在一个频道。</li><li>问题余弦相似度计算：当词库中无该问题时，会启用相似度计算引擎，会将问题与词库中所有的问题进行相似度计算，选取匹配率最高的进行回答（该阈值可设定），较消耗计算机资源，斟酌开启</li></ul><table><thead><tr><th align="left">群部分</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>grouplist</code></td><td align="left">查看开启记录&#x2F;回复的群列表</td></tr><tr><td align="left"><code>add/remove learning &lt;群号&gt;</code></td><td align="left">添加&#x2F;移除开启记录的群，有多个用空格隔开</td></tr><tr><td align="left"><code>add/remove learnings &lt;群号&gt;</code></td><td align="left">同时添加&#x2F;移除开启记录和回复的群，有多个用空格隔开</td></tr><tr><td align="left"><code>add/remove reply &lt;群号&gt;</code></td><td align="left">添加&#x2F;移除开启回复的群，有多个用空格隔开</td></tr><tr><td align="left"><code>add/remove tag &lt;标签&gt; &lt;群号&gt;</code></td><td align="left">添加&#x2F;移除群标签(移除时不需要带上标签参数)</td></tr><tr><td align="left"><code>add/remove subadmin &lt;群号&gt;</code></td><td align="left">添加&#x2F;移除可自行管理本群词库的群，有多个用空格隔开</td></tr><tr><td align="left"><code>add/remove unmerge &lt;群号&gt;</code></td><td align="left">添加&#x2F;移除不录入总词库的群，有多个用空格隔开</td></tr></tbody></table><ul><li>群标签：群往往带有一些<strong>属性</strong>，例如xxx游戏群，xxx交流群，这时候可以为群添加相应的标签，在记录词库时，会<strong>记录在相应标签的词库</strong>内，这样在回复时，只会在<strong>相应标签词库内寻找答案</strong>，一个群可以拥有<strong>多个标签，支持中文</strong></li></ul><table><thead><tr><th align="left">文字转语音</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>setvoicept  &lt;训练集&gt;</code></td><td align="left">选择音源合成时的训练模型</td></tr><tr><td align="left"><code>uploadwav</code></td><td align="left">上传音源文件</td></tr></tbody></table><table><thead><tr><th align="left">快速删除</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>fastdelete</code></td><td align="left">更改快速删除功能的使用权限</td></tr><tr><td align="left"><code>settemp</code> &lt;条数&gt;</td><td align="left">设置单个群中消息缓存最大数目</td></tr></tbody></table><ul><li>&#96;快速删除：在开启回复的群中，向Bot所发送的消息回复<code>!d</code> 、<code>!delete</code> 、<code>！d</code> 、<code>！delete</code> 即可在词库中删除该回复</li></ul><table><thead><tr><th align="left">定时任务</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>add/remove autotask &lt;任务名称&gt;</code></td><td align="left">添加&#x2F;移除定时任务</td></tr><tr><td align="left"><code>autotaskinfo</code></td><td align="left">查看定时任务详情</td></tr><tr><td align="left"><code>autotaskcommand</code></td><td align="left">查看定时任务中的特殊指令</td></tr></tbody></table><h2 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h2><hr><p><strong>ChatLearning</strong>在2.9.5版本中加入了定时任务功能，可以自定义地定时执行<strong>ChatLearning</strong>中的指令</p><p><strong>注：若发现输入正确却无法解析内容，请检查txt文件编码是否为UTF-8</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&#x27;&#x27;&#x27;这是一个定时任务的模板，程序会自动解析带标记的行&#x27;&#x27;&#x27;</span><br><span class="hljs-string">&#x27;&#x27;&#x27;请创建一个新的txt文件放置AutoTask文件夹下来自定义你的任务，文件名即是任务名&#x27;&#x27;&#x27;</span><br><br><span class="hljs-string">&#x27;&#x27;</span>开头使用<span class="hljs-string">&quot;#&quot;</span>来标记任务的执行日期<span class="hljs-string">&#x27;&#x27;</span><br>如<span class="hljs-string">&quot;每日&quot;</span>：<br><span class="hljs-comment">#everyday</span><br>或是<span class="hljs-string">&quot;周一 周日&quot;</span>：<br><span class="hljs-comment">#w1 w7</span><br>还可以是<span class="hljs-string">&quot;每2天&quot;</span>:<br><span class="hljs-comment">#x2</span><br>亦或是<span class="hljs-string">&quot;具体日期&quot;</span>(不足十位请补<span class="hljs-number">0</span>，如<span class="hljs-number">5</span>→05)：<br><span class="hljs-comment">#2022-08-30</span><br><br><span class="hljs-string">&#x27;&#x27;</span>开头使用<span class="hljs-string">&quot;@&quot;</span>来标记执行结果发送的QQ号<span class="hljs-string">&#x27;&#x27;</span><br>如：<br><span class="hljs-meta">@<span class="hljs-number">123456</span></span><br><br><span class="hljs-string">&#x27;&#x27;</span>开头使用<span class="hljs-string">&quot;*&quot;</span>来标记任务的执行时间<span class="hljs-string">&#x27;&#x27;</span><br>如(请使用英文冒号哦，不足十位请补<span class="hljs-number">0</span>，如<span class="hljs-number">5</span>→05)：<br>*05:05<br><br><span class="hljs-string">&#x27;&#x27;</span>开头使用<span class="hljs-string">&quot;/&quot;</span>来标记任务所需执行的指令<span class="hljs-string">&#x27;&#x27;</span><br>如(一个指令对应一行)：<br>/check<br>/autodelete<br><br>以下是示例（每天的<span class="hljs-number">12</span>点和<span class="hljs-number">23</span>点<span class="hljs-number">59</span>分，按顺序执行check，grouplist指令，并将结果发送给<span class="hljs-number">123456</span>）：<br><span class="hljs-comment">#everyday</span><br><span class="hljs-meta">@<span class="hljs-number">123456</span></span><br>*<span class="hljs-number">12</span>:<span class="hljs-number">00</span> <span class="hljs-number">23</span>:<span class="hljs-number">59</span><br>/check<br>/grouplist<br><br>-------------------<br>在自动任务中有一些特殊指令：<br>自动清理词库<span class="hljs-string">&quot;autodelete&quot;</span><br>发送群消息<span class="hljs-string">&quot;sendgroupmessage &lt;群号&gt; &lt;消息&gt;&quot;</span><br>发送群图片<span class="hljs-string">&quot;sendgroupmessageimage &lt;群号&gt; &lt;图片文件的绝对路径&gt;&quot;</span><br>发送好友消息<span class="hljs-string">&quot;sendfriendmessage &lt;好友QQ&gt; &lt;消息&gt;&quot;</span><br>发送好友图片<span class="hljs-string">&quot;sendfriendmessageimage &lt;好友QQ&gt; &lt;图片文件的绝对路径&gt;&quot;</span><br>在&lt;消息&gt;这个参数中，可以附带一些指定的标记，程序会将这些标记替换成相应的结果：<br>当前年：&#123;year&#125;<br>当前月：&#123;month&#125;<br>当前日：&#123;day&#125;<br>换行：&#123;n&#125;<br>如：<br>/sendgroupmessage <span class="hljs-number">123456</span> 今天是&#123;year&#125;年&#123;month&#125;月&#123;day&#125;日！&#123;n&#125;大家好啊！<br>-------------------<br><br></code></pre></td></tr></table></figure><h2 id="管理模式"><a href="#管理模式" class="headerlink" title="管理模式"></a>管理模式</h2><ul><li>词库管理：模糊 <code>搜索/查看/删除</code> <code>所有群/指定群</code> 的词库</li><li>过滤：自定义无用关键词，也可以通过在删除答案时前加<code>add</code>来直接添加进过滤列表</li><li>黑名单：自定义敏感关键词，不记录且将对象拉入黑名单，用 <code>blackfreq <次数></code> 自定义容错次数。</li><li>自动清理词库：删除词库中仅出现过单次的条目和被过滤的条目</li><li>添加定时任务：使用定时任务定义的语法添加定时任务</li><li>添加自定义回复：为词库添加回复，问答皆可除视频、文件任意形式的消息(只要QQ能发出来)，同时为答案定义<strong>权重(词库中每个答案都有一个权重，意为答案出现过的次数)</strong></li></ul><h2 id="文字转语音"><a href="#文字转语音" class="headerlink" title="文字转语音"></a><strong>文字转语音</strong></h2><p><a href="https://github.com/Nana-Miko/ChatLearning/blob/master/ToVoice/ToVoice.md">ChatLearning—ToVoice</a></p><h2 id="Q-A"><a href="#Q-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><p><strong>Q：ChatLearning</strong>的功能是什么？</p><p><strong>A：ChatLearning</strong>可以自动的从群聊中收集聊天记录，并且将这些聊天记录整理成一个<strong>问&amp;答</strong>的词库，当有人发送的消息与词库中的”<strong>问</strong>“匹配时，会从“<strong>答</strong>”中随机抽取其中一个回复在群聊中</p><hr><p><strong>Q</strong>：打开软件后，我应该如何使用？</p><p><strong>A</strong>：首先应添加需要bot记录的群号，然后开启记录功能（输入<code>help</code>可查看到对应指令）</p><hr><p><strong>Q</strong>：要收集多久bot才会开始回复呢？</p><p><strong>A</strong>：收集的时间完全由自己决定，理论上时间越久，效果会更好且更加有趣</p><hr><p><strong>Q</strong>：我要怎么才能让bot回复？</p><p><strong>A</strong>：首先应添加需要bot回复的群号，然后开启回复功能（输入<code>help</code>可查看到对应指令）</p><hr><p><strong>Q</strong>：目录下的<code>.cl</code>和<code>.clc</code>文件是什么，我可以删除它吗？</p><p><strong>A</strong>：<code>.cl</code>文件是<strong>ChatLearning</strong>所缓存在本地的词库，它的文件名就是所对应的QQ群号，如果你觉得不需要这个词库了，可以在<strong>ChatLearning</strong>退出后将它删除。<code>.clc</code>文件是<strong>ChatLearning</strong>的配置文件，删除后<strong>ChatLearning</strong>会随即崩溃</p><hr><p><strong>Q</strong>：目录下的<code>.cl</code>文件太大太占空间了怎么办？</p><p><strong>A</strong>：一般来说不是每天都隔一会99+的群聊，是不会很占空间的， 目前只能选择进入管理模式手动清理一些不需要的回复，后续会更新根据记录的时间批量删除</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;开始使用&quot;&gt;&lt;a href=&quot;#开始使用&quot; class=&quot;headerlink&quot; title=&quot;开始使用&quot;&gt;&lt;/a&gt;开始使用&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/project-mirai/mirai-api-http</summary>
      
    
    
    
    <category term="QQbot" scheme="https://w1ndys.github.io/categories/QQbot/"/>
    
    
    <category term="QQbot" scheme="https://w1ndys.github.io/tags/QQbot/"/>
    
  </entry>
  
  <entry>
    <title>手把手教你用新版OBS虚拟摄像头</title>
    <link href="https://w1ndys.github.io/2023/12/10/Windows_obs/"/>
    <id>https://w1ndys.github.io/2023/12/10/Windows_obs/</id>
    <published>2023-12-10T12:30:41.159Z</published>
    <updated>2023-12-21T15:37:02.855Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本教程基于B站<a href="https://www.bilibili.com/read/cv11603378/%E7%BC%96%E5%86%99">https://www.bilibili.com/read/cv11603378/编写</a></p></blockquote><h1 id="零、前言说明"><a href="#零、前言说明" class="headerlink" title="零、前言说明"></a>零、前言说明</h1><p><strong>本教程仅适用于最新版OBS，主版本号30（版本26基本与此一样）</strong></p><h1 id="一、下载安装"><a href="#一、下载安装" class="headerlink" title="一、下载安装"></a>一、下载安装</h1><ol><li><p>下载方式有两种：</p></li><li><ul><li><p><strong>官网下载：</strong><a href="https://obsproject.com/">https://obsproject.com</a></p><p>服务器在国外，<strong>速度可能较慢</strong>，你可以尝试使用下面的方法下载。</p></li><li><p><strong>国内镜像：</strong><a href="https://mirror.tuna.tsinghua.edu.cn/">https://mirror.tuna.tsinghua.edu.cn</a></p><p>清华大学TUNA镜像站，右侧栏<strong>“获取下载链接”–应用软件–OBS–选择合适的版本下载</strong>即可（注意选择那个<strong>带有“Installer”字样的</strong>，括号里是exe，那个是安装包，zip是便携版）。</p></li></ul></li><li><p>打开安装包，一路下一步安装就行，与普通软件安装没什么两样，安装位置任意选。</p></li></ol><h1 id="二、OBS的简单配置"><a href="#二、OBS的简单配置" class="headerlink" title="二、OBS的简单配置"></a>二、OBS的简单配置</h1><p>打开OBS Studio软件。</p><ul><li><p>可以使用自动配置向导，选择最后一项<strong>“我只使用虚拟摄像机”</strong>即可。</p><p>注：OBS 26版本无此选项，此时你应该选择“取消”</p></li></ul><p><img src="/img/obs/image-20231210203435938.png" srcset="/img/loading.gif" lazyload alt="image-20231210203435938"></p><p>之后选择<strong>“下一步”–“应用设置”</strong></p><ul><li><p>（可选步骤）修改虚拟摄像头的输出大小</p><p>在OBS主程序菜单栏左上角<strong>“文件”</strong>中，找到<strong>“设置”</strong></p><p>你可以在“设置”窗口的“视频”选项卡中找到输出分辨率和帧率的设置</p><p>电脑配置较差的用户可以参考我的设置</p></li></ul><p><img src="/img/obs/image-20231210203512874.png" srcset="/img/loading.gif" lazyload alt="image-20231210203512874"></p><p><strong>不明白各参数什么意思的可以直接照搬我的设置，或者保持默认不动。</strong></p><h1 id="三、准备虚拟视频"><a href="#三、准备虚拟视频" class="headerlink" title="三、准备虚拟视频"></a>三、准备虚拟视频</h1><p>实现录制一个视频，用来虚拟化</p><p>注意此视频将会用作虚拟视频效果</p><h1 id="四、编辑和启动虚拟摄像头"><a href="#四、编辑和启动虚拟摄像头" class="headerlink" title="四、编辑和启动虚拟摄像头"></a>四、编辑和启动虚拟摄像头</h1><ul><li>回到主界面，在下方的<strong>“来源”栏下点击“+”</strong>加号，添加一个<strong>“媒体源”</strong></li></ul><p><img src="/img/obs/image-20231210203640263.png" srcset="/img/loading.gif" lazyload alt="image-20231210203640263"></p><p><img src="/img/obs/image-20231210203654429.png" srcset="/img/loading.gif" lazyload alt="image-20231210203654429"></p><ul><li><strong>点击“浏览”，选择刚才录制好的视频文件</strong></li></ul><p><img src="/img/obs/image-20231210203715094.png" srcset="/img/loading.gif" lazyload alt="image-20231210203715094"></p><p>选择好文件后，<strong>一定记得勾选“循环”！</strong></p><p>此时上方可能不会立刻出现视频的预览，<strong>点击“确定”，视频就出现了</strong>。</p><p>如果没有视频显示在预览的画面里，尝试修改<strong>“在可用时使用硬件编码”</strong>这一选项</p><p>注：如果想再次调出这个界面，双击“来源”栏里的“媒体源”即可。</p><ul><li>理论上的视频应该是铺满画面的，如果没有，那就<strong>右键视频的画面–变换–比例适配屏幕</strong>。</li></ul><p><img src="/img/obs/image-20231210203940096.png" srcset="/img/loading.gif" lazyload alt="image-20231210203940096"></p><ul><li><p>下面来启动虚拟摄像头</p><p>单击主界面<strong>右下角“控件”一栏里的“启动虚拟摄像机”</strong></p></li></ul><p><img src="/img/obs/image-20231210203956900.png" srcset="/img/loading.gif" lazyload alt="image-20231210203956900"></p><h1 id="五、在第三方软件里使用虚拟摄像头"><a href="#五、在第三方软件里使用虚拟摄像头" class="headerlink" title="五、在第三方软件里使用虚拟摄像头"></a>五、在第三方软件里使用虚拟摄像头</h1><p>这里以<strong>QQ</strong>电脑版为例</p><ul><li>在<strong>QQ</strong>里找到<strong>“设置”</strong></li></ul><p><img src="/img/obs/image-20231210204103698.png" srcset="/img/loading.gif" lazyload alt="image-20231210204103698"></p><ul><li>在“视频”选项卡里找到<strong>“摄像头”</strong>，设置为<strong>“OBS Virtual Camera”</strong></li><li>打开预览画面</li></ul><p><img src="/img/obs/image-20231210204210755.png" srcset="/img/loading.gif" lazyload alt="image-20231210204210755"></p><p>此时上面应该能显示出你在OBS中设置好的画面，关闭设置界面即可。</p><p>此时大功告成了，QQ视频里会循环播放你录制好的视频</p><ul><li>如果出现如下画面，请检查是否<strong>在OBS内“启动虚拟摄像机”</strong></li></ul><p><img src="/img/obs/image-20231210204307899.png" srcset="/img/loading.gif" lazyload alt="image-20231210204307899"></p><ul><li><p>如果卡了，没画面，则需要打开obs的设置</p><p><img src="/img/obs/image-20231210204357713.png" srcset="/img/loading.gif" lazyload alt="image-20231210204357713"></p><p><img src="/img/obs/image-20231210204448834.png" srcset="/img/loading.gif" lazyload alt="image-20231210204448834"></p></li></ul><p>改为800*600比例</p><br/><p>其他软件将默认摄像头设备改为“OBS Virtual Camera”即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本教程基于B站&lt;a href=&quot;https://www.bilibili.com/read/cv11603378/%E7%BC%96%E5%86%99&quot;&gt;https://www.bilibili.com/read/cv11603378/编写&lt;/a&gt;</summary>
      
    
    
    
    <category term="手把手教程" scheme="https://w1ndys.github.io/categories/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E7%A8%8B/"/>
    
    <category term="OBS" scheme="https://w1ndys.github.io/categories/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E7%A8%8B/OBS/"/>
    
    
    <category term="手把手教程系列" scheme="https://w1ndys.github.io/tags/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>CTF文件头文件尾汇总</title>
    <link href="https://w1ndys.github.io/2023/12/09/CTF_misc_fileheader/"/>
    <id>https://w1ndys.github.io/2023/12/09/CTF_misc_fileheader/</id>
    <published>2023-12-09T06:25:09.814Z</published>
    <updated>2023-12-09T06:33:44.348Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转自<a href="https://blog.csdn.net/Ahuuua/article/details/109165473#/">https://blog.csdn.net/Ahuuua/article/details/109165473#/</a></p></blockquote><p>文件头文件尾汇总：</p><table><thead><tr><th>文件类型</th><th>文件头</th><th>文件尾</th><th>特征</th></tr></thead><tbody><tr><td>JPEG (jpg)</td><td>FFD8FF</td><td>FF D9</td><td>ÿØÿà</td></tr><tr><td>PNG (png)</td><td>89504E47</td><td>AE 42 60 82</td><td>.PNG…</td></tr><tr><td>GIF (gif)</td><td>47494638</td><td>00 3B</td><td>GIF89a</td></tr><tr><td>ZIP Archive (zip)</td><td>504B0304</td><td>50 4B</td><td>PK..</td></tr><tr><td>TIFF (tif)</td><td>49492A00</td><td></td><td></td></tr><tr><td>Windows Bitmap (bmp)</td><td>424D</td><td></td><td>BM</td></tr><tr><td>RAR Archive (rar)</td><td>52617221</td><td></td><td>Rar!…</td></tr><tr><td>Wave (wav)</td><td>57415645</td><td></td><td></td></tr><tr><td>AVI (avi)</td><td>41564920</td><td></td><td></td></tr><tr><td>MPEG (mpg)包含音频数据和视频数据</td><td>000001BA</td><td></td><td></td></tr><tr><td>MPEG (mpg)只包含视频数据</td><td>000001B3</td><td></td><td></td></tr><tr><td>7Z</td><td>377ABCAF271C</td><td></td><td>7z¼¯’</td></tr><tr><td>CAD (dwg)</td><td>41433130</td><td></td><td></td></tr><tr><td>Adobe Photoshop (psd)</td><td>38425053</td><td></td><td></td></tr><tr><td>Rich Text Format (rtf)</td><td>7B5C727466</td><td></td><td></td></tr><tr><td>XML (xml)</td><td>3C3F786D6C</td><td></td><td></td></tr><tr><td>HTML (html)</td><td>68746D6C3E</td><td></td><td></td></tr><tr><td>Email [thorough only] (eml)</td><td>44656C69766572792D646174653A</td><td></td><td></td></tr><tr><td>Outlook Express (dbx)</td><td>CFAD12FEC5FD746F</td><td></td><td></td></tr><tr><td>Outlook (pst)</td><td>2142444E</td><td></td><td></td></tr><tr><td>MS Word&#x2F;Excel (xls.or.doc)</td><td>D0CF11E0</td><td></td><td></td></tr><tr><td>MS Access (mdb)</td><td>5374616E64617264204A</td><td></td><td></td></tr><tr><td>WordPerfect(wpd)</td><td>FF575043</td><td></td><td></td></tr><tr><td>Adobe Acrobat (pdf)</td><td>255044462D312E</td><td></td><td>%PDF</td></tr><tr><td>Quicken (qdf)</td><td>AC9EBD8F</td><td></td><td></td></tr><tr><td>Windows Password (pwl)</td><td>E3828596</td><td></td><td></td></tr><tr><td>Real Audio (ram)</td><td>2E7261FD</td><td></td><td></td></tr><tr><td>Real Media (rm)</td><td>2E524D46</td><td></td><td></td></tr><tr><td>Quicktime (mov)</td><td>6D6F6F76</td><td></td><td></td></tr><tr><td>Windows Media (asf)</td><td>3026B2758E66CF11</td><td></td><td></td></tr><tr><td>MIDI (mid)</td><td>4D546864</td><td></td><td></td></tr><tr><td>Win PE</td><td>4D5A</td><td></td><td>MZ</td></tr><tr><td>ELF</td><td>7F 45 4C 46</td><td></td><td>.ELF</td></tr><tr><td>VMDK</td><td>4B 44 4D</td><td></td><td>KDM</td></tr><tr><td>Java-class</td><td>CA FE BA BE</td><td></td><td>Êþº¾</td></tr></tbody></table><p>另外附一些小知识：</p><h2 id="PNG-png"><a href="#PNG-png" class="headerlink" title="PNG (png)"></a>PNG (png)</h2><p>摘于：<a href="https://blog.csdn.net/bisword/article/details/2777121">https://blog.csdn.net/bisword/article/details/2777121</a><br>文件头：89504E47　　　　　　　　　　　　　　　　　　　　　　文件尾：AE 42 60 82<br>PNG文件，我们会发现，文件的结尾12个字符看起来总应该是这样的：00 00 00 00 49 45 4E 44 AE 42 60 82<br>不难明白，由于数据块结构的定义，IEND数据块的长度总是0（00 00 00 00，除非人为加入信息），数据标识总是IEND（49 45 4E 44），因此，CRC码也总是AE 42 60 82。</p><p><img src="/img/file-header/20201019175155622.png" srcset="/img/loading.gif" lazyload alt="img"><img src="/img/file-header/20201019175206371.png" srcset="/img/loading.gif" lazyload alt="img"></p><p><img src="/img/file-header/1.png" srcset="/img/loading.gif" lazyload alt="img"></p><p>给大家举个例子：</p><p>PNG图像：321*332分辨率  321-&gt;00 00 01 41  332-&gt;00 00 01 4C (也可以搜索十六进制找到标志位)</p><p>也可以根据位直接找到标志位，就是IHDR的后面4字节00 00 01 41为宽度 再后4字节00 00 01 4C为长度</p><p><img src="/img/file-header/20201019175441812.png" srcset="/img/loading.gif" lazyload alt="img"></p><p> 89 50 4E 47 0D 0A 1A 0A 是PNG头部署名域，表示这是一个PNG图片<br>00 00 00 0D 描述IHDR头部的大小。</p><h2 id="zip文件"><a href="#zip文件" class="headerlink" title="zip文件"></a>zip文件</h2><p>摘于：<a href="https://blog.csdn.net/qq_26187985/article/details/83654197">https://blog.csdn.net/qq_26187985/article/details/83654197</a></p><p>压缩源文件数据区：<br>50 4B 03 04：这是头文件标记<br>压缩源文件目录区：<br>50 4B 01 02：目录中文件文件头标记<br>压缩源文件目录结束标志：<br>50 4B 05 06：目录结束标记</p><p>无加密<br>压缩源文件数据区的全局加密应当为00 00  （504B0304两个bytes之后）4位二进制数&lt;&#x3D;&gt;1位十六进制数 16bit&lt;&#x3D;&gt;4位16进制<br>且压缩源文件目录区的全局方式位标记应当为00 00（504B0304四个bytes之后）<br>一个字节表示两个16进制数</p><p>假加密<br>压缩源文件数据区的全局加密应当为00 00<br>且压缩源文件目录区的全局方式位标记应当为09 00</p><p>真加密<br>压缩源文件数据区的全局加密应当为09 00<br>且压缩源文件目录区的全局方式位标记应当为09 00</p><p><img src="/img/file-header/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FodXV1YQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" lazyload alt="img"></p><p>全局方式位标记的四个数字中只有第二个数字对其有影响，其它的不管为何值，都不影响它的加密属性！<br>第二个数字为奇数时 –&gt;加密<br>第二个数字为偶数时 –&gt;未加密<br>意思是08 00也是未加密 可以改为00 02 04 06 08<br>改为01 03 05 07 09会被加密</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;转自&lt;a href=&quot;https://blog.csdn.net/Ahuuua/article/details/109165473#/&quot;&gt;https://blog.csdn.net/Ahuuua/article/details/109165473#</summary>
      
    
    
    
    <category term="CTF" scheme="https://w1ndys.github.io/categories/CTF/"/>
    
    <category term="MISC" scheme="https://w1ndys.github.io/categories/CTF/MISC/"/>
    
    
    <category term="CTF" scheme="https://w1ndys.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>解决Windows11“为了对电脑进行保护，已经阻止此应用。”</title>
    <link href="https://w1ndys.github.io/2023/12/08/Windows_bandownload/"/>
    <id>https://w1ndys.github.io/2023/12/08/Windows_bandownload/</id>
    <published>2023-12-08T14:08:23.261Z</published>
    <updated>2023-12-10T12:31:42.554Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Windows/image-20231208221039318.png" srcset="/img/loading.gif" lazyload alt="image-20231208221039318"></p><p>有时候安装客户端的时候会遇到这种情况</p><p>然而网上的方法对于家庭版电脑并不适用</p><p>但是我们可以通过命终端来解决</p><p>首先右键开始菜单</p><p><img src="/img/Windows/image-20231208221525986.png" srcset="/img/loading.gif" lazyload alt="image-20231208221525986"></p><p>点击<font color='red'>Windows终端（管理员）</font></p><p>一定要选择管理员终端</p><p>然后切换到exe所在的目录</p><p><img src="/img/Windows/image-20231208221942022.png" srcset="/img/loading.gif" lazyload alt="image-20231208221942022"></p><p>然后输入待安装文件名（不要丢掉后缀名）</p><p><img src="/img/Windows/image-20231208222008686.png" srcset="/img/loading.gif" lazyload alt="image-20231208222008686"></p><p>结束！祝你学得开心！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/img/Windows/image-20231208221039318.png&quot; srcset=&quot;/img/loading.gif&quot; lazyload alt=&quot;image-20231208221039318&quot;&gt;&lt;/p&gt;
&lt;p&gt;有时候安装客户端的时候会</summary>
      
    
    
    
    <category term="Windows" scheme="https://w1ndys.github.io/categories/Windows/"/>
    
    <category term="报错" scheme="https://w1ndys.github.io/categories/Windows/%E6%8A%A5%E9%94%99/"/>
    
    
    <category term="Windows技术分享" scheme="https://w1ndys.github.io/tags/Windows%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>MuteGames使用手册</title>
    <link href="https://w1ndys.github.io/2023/12/06/bot_MuteGames/"/>
    <id>https://w1ndys.github.io/2023/12/06/bot_MuteGames/</id>
    <published>2023-12-06T13:09:01.221Z</published>
    <updated>2023-12-13T12:53:51.331Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MuteGames"><a href="#MuteGames" class="headerlink" title="MuteGames"></a>MuteGames</h1><p>一个以 <a href="https://github.com/mamoe/mirai">Mirai-Console</a> 为基础开发并为了满足群友PVP需求和抖M需求开发的禁言游戏集合</p><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><p>插件需要以 <a href="https://github.com/mamoe/mirai">Mirai-Console</a></p><p>为基础，你可以下载 <a href="https://github.com/iTXTech/mirai-console-loader/releases">MCL</a> 作为你的Mirai插件载入器</p><p>与此同时，本插件需要 Mirai 官方插件 </p><p>使用之前请先用参考<a href="#%E6%9D%83%E9%99%90%E8%8A%82%E7%82%B9">权限节点</a>来开启插件权限</p><p><strong>请注意：当用户权限大于等于机器人所在权限时（如机器人是管理员用户为群主），机器人不会对游戏请求做任何回复</strong></p><h2 id="权限节点"><a href="#权限节点" class="headerlink" title="权限节点"></a>权限节点</h2><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">|<span class="hljs-string">- com.evolvedghost.mutegames:*                      The base permission</span><br><span class="hljs-string"></span>|<span class="hljs-string">  </span>|<span class="hljs-string">- com.evolvedghost.mutegames:command.banme       自裁指令</span><br><span class="hljs-string"></span>|<span class="hljs-string">  </span>|<span class="hljs-string">- com.evolvedghost.mutegames:command.blackjack   21点（Blackjack）指令</span><br><span class="hljs-string"></span>|<span class="hljs-string">  </span>|<span class="hljs-string">- com.evolvedghost.mutegames:command.duel        决斗指令</span><br><span class="hljs-string"></span>|<span class="hljs-string">  </span>|<span class="hljs-string">- com.evolvedghost.mutegames:command.mg          MuteGams管理指令</span><br><span class="hljs-string"></span>|<span class="hljs-string">  </span>|<span class="hljs-string">- com.evolvedghost.mutegames:command.roulette    俄罗斯轮盘指令</span><br></code></pre></td></tr></table></figure><p>插件调用的是Mirai自带的权限管理系统，你可以在控制台输入<code>?</code>来获取帮助，通常权限的添加方式为：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#permission add <span class="hljs-string">&lt;被许可人 ID&gt;</span> <span class="hljs-string">&lt;权限 ID&gt;</span>    # 授权一个权限</span><br></code></pre></td></tr></table></figure><p>&lt;被许可人 ID&gt; 可以为QQ号或者通配符<code>*</code>来代表所有用户</p><p>&lt;权限 ID&gt; 即上述权限名称，可按照需求添加</p><p>一个例子为：<code>#permission add * com.evolvedghost.mutegames:*</code>，即为所有用户添加本插件所有权限</p><h2 id="插件命令"><a href="#插件命令" class="headerlink" title="插件命令"></a>插件命令</h2><p>插件分为两种命令，一种为普通命令一种为管理员命令</p><p>默认别名为插件预设置的alias，普通命令的别名你可以在Config中更改</p><h3 id="普通命令"><a href="#普通命令" class="headerlink" title="普通命令"></a>普通命令</h3><table><thead><tr><th>指令</th><th>默认别名</th><th>功能</th></tr></thead><tbody><tr><td><code>(#)banMe</code></td><td><code>自裁</code></td><td>自裁（直接获得一个禁言）</td></tr><tr><td><code>(#)banMe [seconds]&lt;Int&gt;</code></td><td><code>自裁 [seconds]&lt;Int&gt;</code></td><td>自定义秒数禁言</td></tr><tr><td><code>(#)duel</code></td><td><code>决斗</code></td><td>决斗指令（两位群友以决斗的方式赢取禁言）</td></tr><tr><td><code>(#)roulette</code></td><td><code>轮盘,俄罗斯轮盘</code></td><td>俄罗斯轮盘赌（以轮盘赌的方式赢取禁言）</td></tr><tr><td><code>(#)blackjack</code></td><td><code>21点</code></td><td>发起#加入一轮21点</td></tr><tr><td><code>(#)blackjack start</code></td><td><code>21点 开始</code></td><td>开启一轮21点</td></tr><tr><td><code>(#)blackjack add</code></td><td><code>21点 拿牌</code></td><td>在21点中拿牌</td></tr><tr><td><code>(#)blackjack stop</code></td><td><code>21点 停牌</code></td><td>在21点中停牌</td></tr><tr><td><code>(#)blackjack giveup</code></td><td><code>21点 投降</code></td><td>在21点中投降</td></tr><tr><td><code>(#)blackjack check</code></td><td><code>21点 看牌</code></td><td>在21点中看牌</td></tr><tr><td><code>(#)blackjack help</code></td><td><code>21点 帮助</code></td><td>获取21点帮助</td></tr></tbody></table><h3 id="管理命令"><a href="#管理命令" class="headerlink" title="管理命令"></a>管理命令</h3><table><thead><tr><th>指令</th><th>默认别名（不可更改）</th><th>功能</th></tr></thead><tbody><tr><td><code>#mg dualStop</code></td><td><code>#mg 停止决斗</code></td><td>停止本群的决斗</td></tr><tr><td><code>#mg reload</code></td><td><code>#mg 重载</code></td><td>重载本插件的配置项</td></tr><tr><td><code>#mg rouletteStop</code></td><td><code>#mg 停止轮盘</code></td><td>停止本群的俄罗斯轮盘</td></tr><tr><td><code>#mg bjStop</code></td><td><code>#mg 停止21点</code></td><td>停止本群的停止21点</td></tr></tbody></table><h2 id="插件配置"><a href="#插件配置" class="headerlink" title="插件配置"></a>插件配置</h2><p>插件的配置项储存在<code>config\com.evolvedghost.mutegames</code>目录下，有以下文件</p><table><thead><tr><th>文件名</th><th>作用</th></tr></thead><tbody><tr><td><code>admin.yml</code></td><td>配置管理员命令和插件基础设置</td></tr><tr><td><code>banMe.yml</code></td><td>配置自裁设置</td></tr><tr><td><code>duel.yml</code></td><td>配置决斗设置</td></tr><tr><td><code>roulette.yml</code></td><td>配置轮盘赌设置</td></tr><tr><td><code>blackjack.yml</code></td><td>配置21点设置</td></tr></tbody></table><p>相应的设置在文件中应有详细注明</p><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>如果您需要自行编译，使用在文件目录使用以下命令即可</p><p>Windows：<code>.#gradlew.bat buildPlugin</code></p><p>Linux：<code>.#gradlew buildPlugin</code></p><p>Mirai版本在2.12以下的用户需要向下兼容包，本项目Release并不会提供此类包，请自行编译，编译指令为：<code>.#gradlew buildPluginLegacy</code></p><p>编译好的jar文件可以在<code>#build#mirai</code>下找到</p><h2 id="特别感谢"><a href="#特别感谢" class="headerlink" title="特别感谢"></a>特别感谢</h2><p><a href="https://github.com/mamoe/mirai">Mirai</a> 提供QQ机器人</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MuteGames&quot;&gt;&lt;a href=&quot;#MuteGames&quot; class=&quot;headerlink&quot; title=&quot;MuteGames&quot;&gt;&lt;/a&gt;MuteGames&lt;/h1&gt;&lt;p&gt;一个以 &lt;a href=&quot;https://github.com/mamoe/mira</summary>
      
    
    
    
    <category term="QQbot" scheme="https://w1ndys.github.io/categories/QQbot/"/>
    
    
    <category term="QQbot" scheme="https://w1ndys.github.io/tags/QQbot/"/>
    
  </entry>
  
  <entry>
    <title>Python实现九宫格切割图片</title>
    <link href="https://w1ndys.github.io/2023/12/04/python_1_to_9/"/>
    <id>https://w1ndys.github.io/2023/12/04/python_1_to_9/</id>
    <published>2023-12-04T14:02:29.041Z</published>
    <updated>2023-12-04T14:37:32.844Z</updated>
    
    <content type="html"><![CDATA[<h4 id="克隆本项目"><a href="#克隆本项目" class="headerlink" title="克隆本项目"></a>克隆本项目</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/W1ndys/</span><span class="hljs-number">1</span>to9-image.git<br></code></pre></td></tr></table></figure><p>然后可以看到项目文件夹</p><p><img src="/img/Python/1-to-9/image-20231204220532722.png" srcset="/img/loading.gif" lazyload alt="image-20231204220532722"></p><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><ol><li>把需要分割的图片复制进文件夹并且命名为 <code>input_image.jpg</code></li><li>在当前目录进命令行执行 <code>python 1.py</code></li><li>看到输出回显之后找 <code>output</code>文件夹就行</li></ol><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>本项目适用于长宽一致的正方形图片，分割最佳效果</p><p>其余比例不适合使用本项目</p><p>非常适合朋友圈九宫格切图</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;克隆本项目&quot;&gt;&lt;a href=&quot;#克隆本项目&quot; class=&quot;headerlink&quot; title=&quot;克隆本项目&quot;&gt;&lt;/a&gt;克隆本项目&lt;/h4&gt;&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://w1ndys.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Python" scheme="https://w1ndys.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Python/"/>
    
    
    <category term="Python小工具" scheme="https://w1ndys.github.io/tags/Python%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
    <category term="Python脚本" scheme="https://w1ndys.github.io/tags/Python%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>技能兴鲁2023职业技能大赛网络安全赛项比赛心得</title>
    <link href="https://w1ndys.github.io/2023/11/30/CTF_think_jnxl2023/"/>
    <id>https://w1ndys.github.io/2023/11/30/CTF_think_jnxl2023/</id>
    <published>2023-11-30T15:07:43.844Z</published>
    <updated>2023-11-30T15:19:06.589Z</updated>
    
    <content type="html"><![CDATA[<p>30个队伍排名第18还行，有一个队伍弃权没来，两个队伍作弊被ban了，顺延2名，最终第16，广外和南理的师傅太强了，山警的大哥被ban了不然也是前三<br>11月24就已经打完了，一直没来得及写心得</p><p><img src="/img/jnxl2023/1701356901716.jpg" srcset="/img/loading.gif" lazyload alt="1701356901716"><br>可能是因为团队赛吧<br>感觉比科来打的好点<br>有好几个题都是差一点<br>我交了两个简单题，逆了一个misc的pyc，也是没拖后腿<br>misc这个题是很有意思的，压缩包有密码，可以暴力破解出来，然后三个附件，其中一个是一首诗，很有意思，但是不知道这首诗是有什么用，这题就差一点了，没做出来。<br>发现了自己还有很多东西没学没掌握好，re的花指令，动态调试，老东西直接秒了的题，我不会</p><p>见到了西邮的师傅</p><p>另外说一下对组委会的印象<br>评价是一坨稀烂<br>连个纪念品都没有，也没手提包，整场下来就给个参赛证，然后报告厅像个教室，甚至还不如我们的教室大（<br>进赛场之后桌子上一人一份伙食（一包奶一个面包一根火腿肠，我的天我们还以为这是早饭，没想到这是午饭）<br>中途上了一遍零食（好丽友＋一根火腿肠）爆笑如雷了，在济南都是组委包吃住，酒店随便吃的<br>还有更抽象的<br>上午10:30开赛，到时间准时开赛准时断电，布置赛场也偷工减料了吧，供电不足直接断电了，抢修了一个小时导致比赛延后了<br>然后中途上了一次电，信号屏蔽仪直接嘎嘣冒烟，当场炸了，还有好几位师傅的电源适配器给烧了（<del>byd这才是应急响应是吧</del></p><p>这也是裁判长最忙的一次，山警大哥应该是比赛过程中询问wp，说的很含糊然后就ban了，还有带手机被听见了，但是没被逮住，辗优就在我隔壁，很强的一个热点信号</p><p>三等奖，也算是没白来，威海那个去了大概能拿个一等，他们组委举办的也还行，就是路费太高了，没奖金没报销<br>总的来说还是得练，师傅们觉得一把梭的题我要搞半天</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;30个队伍排名第18还行，有一个队伍弃权没来，两个队伍作弊被ban了，顺延2名，最终第16，广外和南理的师傅太强了，山警的大哥被ban了不然也是前三&lt;br&gt;11月24就已经打完了，一直没来得及写心得&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/jnxl2023/170135</summary>
      
    
    
    
    <category term="CTF" scheme="https://w1ndys.github.io/categories/CTF/"/>
    
    <category term="比赛心得" scheme="https://w1ndys.github.io/categories/CTF/%E6%AF%94%E8%B5%9B%E5%BF%83%E5%BE%97/"/>
    
    <category term="省赛" scheme="https://w1ndys.github.io/categories/CTF/%E6%AF%94%E8%B5%9B%E5%BF%83%E5%BE%97/%E7%9C%81%E8%B5%9B/"/>
    
    
    <category term="CTF" scheme="https://w1ndys.github.io/tags/CTF/"/>
    
    <category term="技能兴鲁" scheme="https://w1ndys.github.io/tags/%E6%8A%80%E8%83%BD%E5%85%B4%E9%B2%81/"/>
    
  </entry>
  
  <entry>
    <title>实验七 最小生成树和最短路径的实现</title>
    <link href="https://w1ndys.github.io/2023/11/30/DS_test7/"/>
    <id>https://w1ndys.github.io/2023/11/30/DS_test7/</id>
    <published>2023-11-30T10:31:48.044Z</published>
    <updated>2023-11-30T11:53:22.054Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cyberdownload.anrunlu.net/Fv5QkbY1G5LDg_28R1J8Oief5nmC" srcset="/img/loading.gif" lazyload alt="Fv5QkbY1G5LDg_28R1J8Oief5nmC"></p><h1 id="Prim算法"><a href="#Prim算法" class="headerlink" title="Prim算法"></a>Prim算法</h1><blockquote><p>没听课（）教材代码，复制过来了</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">/******************************* </span><br><span class="hljs-comment">   对应教材6.4.1节，Prim算法 </span><br><span class="hljs-comment">********************************/</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MaxSize = <span class="hljs-number">10</span>;                   <span class="hljs-comment">//图中最多顶点个数</span><br><span class="hljs-type">int</span> visited[MaxSize] = &#123;<span class="hljs-number">0</span>&#125;;              <span class="hljs-comment">//全局数组变量visited初始化</span><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">DataType</span>&gt;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MGraph</span><br>&#123;<br><span class="hljs-keyword">public</span>:<br>   <span class="hljs-built_in">MGraph</span>(DataType a[ ], <span class="hljs-type">int</span> n, <span class="hljs-type">int</span> e);     <span class="hljs-comment">//构造函数，建立具有n个顶点e条边的图</span><br>   ~<span class="hljs-built_in">MGraph</span>( )&#123; &#125;;                        <span class="hljs-comment">//析构函数</span><br> <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Prim</span><span class="hljs-params">(<span class="hljs-type">int</span> v)</span></span>;<br><span class="hljs-keyword">private</span>:<br>    DataType vertex[MaxSize];           <span class="hljs-comment">//存放图中顶点的数组</span><br>    <span class="hljs-type">int</span> edge[MaxSize][MaxSize];           <span class="hljs-comment">//存放图中边的数组</span><br>    <span class="hljs-type">int</span> vertexNum, edgeNum;              <span class="hljs-comment">//图的顶点数和边数</span><br><br> <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">MinEdge</span><span class="hljs-params">(<span class="hljs-type">int</span> r[ ], <span class="hljs-type">int</span> n)</span></span>;<br>&#125;;<br>  <br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">DataType</span>&gt;<br>MGraph&lt;DataType&gt; :: <span class="hljs-built_in">MGraph</span>(DataType a[ ], <span class="hljs-type">int</span> n, <span class="hljs-type">int</span> e) <br>&#123;<br>   <span class="hljs-type">int</span> i, j, k, w;<br>   vertexNum = n; edgeNum = e;<br>   <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; vertexNum; i++)          <span class="hljs-comment">//存储顶点</span><br>   vertex[i] = a[i];<br>   <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; vertexNum; i++)          <span class="hljs-comment">//初始化邻接矩阵</span><br> <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; vertexNum; j++)<br>   <span class="hljs-keyword">if</span> (i == j)<br>   edge[i][j] = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span><br>   edge[i][j] = <span class="hljs-number">100</span>;               <span class="hljs-comment">//假设边上权的最大值是100             </span><br>   <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; k &lt; edgeNum; k++)           <span class="hljs-comment">//依次输入每一条边</span><br>   &#123;<br>   cout &lt;&lt; <span class="hljs-string">&quot;请输入边依附的两个顶点的编号，以及边上的权值：&quot;</span>;<br>cin &gt;&gt; i &gt;&gt; j &gt;&gt; w;                       <span class="hljs-comment">//输入边依附的两个顶点的编号</span><br>edge[i][j] = w; edge[j][i] = w;           <span class="hljs-comment">//置有边标志</span><br>   &#125;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">DataType</span>&gt;<br><span class="hljs-type">void</span> MGraph&lt;DataType&gt; :: <span class="hljs-built_in">Prim</span>(<span class="hljs-type">int</span> v)                           <span class="hljs-comment">//从顶点v出发</span><br>&#123;   <br><span class="hljs-type">int</span> i, j, k;<br><span class="hljs-type">int</span> adjvex[MaxSize], lowcost[MaxSize];<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; vertexNum; i++)             <span class="hljs-comment">//初始化辅助数组</span><br>&#123;<br>lowcost[i] = edge[v][i]; adjvex[i] = v;<br>&#125;<br>lowcost[v] = <span class="hljs-number">0</span>;                         <span class="hljs-comment">//将顶点v加入集合U</span><br><span class="hljs-keyword">for</span> (k = <span class="hljs-number">1</span>; k &lt; vertexNum; k++)            <span class="hljs-comment">//迭代n-1次</span><br>&#123;<br>j = <span class="hljs-built_in">MinEdge</span>(lowcost, vertexNum);       <span class="hljs-comment">//寻找最短边的邻接点j</span><br>      cout &lt;&lt; <span class="hljs-string">&quot;(&quot;</span> &lt;&lt; vertex[j] &lt;&lt; <span class="hljs-string">&quot;,&quot;</span> &lt;&lt; vertex[adjvex[j]] &lt;&lt; <span class="hljs-string">&quot;)&quot;</span> &lt;&lt; lowcost[j] &lt;&lt; endl; <br>lowcost[j] = <span class="hljs-number">0</span>;                       <span class="hljs-comment">//顶点j加入集合U</span><br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; vertexNum; i++)          <span class="hljs-comment">//调整辅助数组</span><br>        <span class="hljs-keyword">if</span> (edge[i][j] &lt; lowcost[i]) &#123;<br>lowcost[i] = edge[i][j]; <br>adjvex[i] = j;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">DataType</span>&gt;<br><span class="hljs-type">int</span> MGraph&lt;DataType&gt; :: <span class="hljs-built_in">MinEdge</span>(<span class="hljs-type">int</span> r[ ], <span class="hljs-type">int</span> n)<br>&#123;<br><span class="hljs-type">int</span> index = <span class="hljs-number">0</span>, min = <span class="hljs-number">100</span>;           <span class="hljs-comment">//此处如果仅记载最小值下标会有bug </span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; n; i++)<br><span class="hljs-keyword">if</span> (r[i] != <span class="hljs-number">0</span> &amp;&amp; r[i] &lt; min)<br>&#123;<br>min = r[i]; index = i;<br>&#125;<br><span class="hljs-keyword">return</span> index;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">( )</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">/*测试数据使用教材 图6-16 所示带权无向图， 输入边依次为 </span><br><span class="hljs-comment">(0 1 34)(0 2 46)(0 5 19)(1 4 12)(2 3 17)(2 5 25)(3 4 38)(3 5 25)(4 5 26) */</span> <br><span class="hljs-type">char</span> ch[ ]=&#123;<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-string">&#x27;C&#x27;</span>,<span class="hljs-string">&#x27;D&#x27;</span>,<span class="hljs-string">&#x27;E&#x27;</span>,<span class="hljs-string">&#x27;F&#x27;</span>&#125;;       <br>MGraph&lt;<span class="hljs-type">char</span>&gt; MG&#123;ch, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>&#125;;             <br>MG.<span class="hljs-built_in">Prim</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://cyberdownload.anrunlu.net/Fv5QkbY1G5LDg_28R1J8Oief5nmC&quot; srcset=&quot;/img/loading.gif&quot; lazyload alt=&quot;Fv5QkbY1G5LDg_28R1J8Oie</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://w1ndys.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="数据结构作业" scheme="https://w1ndys.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="实验" scheme="https://w1ndys.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%9C%E4%B8%9A/%E5%AE%9E%E9%AA%8C/"/>
    
    
    <category term="数据结构作业" scheme="https://w1ndys.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>实验六 图的构建与遍历</title>
    <link href="https://w1ndys.github.io/2023/11/30/DS_test6/"/>
    <id>https://w1ndys.github.io/2023/11/30/DS_test6/</id>
    <published>2023-11-30T02:42:23.000Z</published>
    <updated>2023-11-30T15:16:55.598Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cyberdownload.anrunlu.net/FqL91OBssRscbirgk2-0714eojo6" srcset="/img/loading.gif" lazyload alt="img"></p><h1 id="邻接矩阵"><a href="#邻接矩阵" class="headerlink" title="邻接矩阵"></a>邻接矩阵</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MaxSize = <span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> visited[MaxSize] = &#123; <span class="hljs-number">0</span> &#125;;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">DataType</span>&gt;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MGraph</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-built_in">MGraph</span>(DataType a[], <span class="hljs-type">int</span> n, <span class="hljs-type">int</span> e);<br>    ~<span class="hljs-built_in">MGraph</span>() &#123;&#125;;<br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">DFTraverse</span><span class="hljs-params">(<span class="hljs-type">int</span> v)</span></span>;<br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">BFTraverse</span><span class="hljs-params">(<span class="hljs-type">int</span> v)</span></span>;<br><span class="hljs-keyword">private</span>:<br>    DataType vertex[MaxSize];<br>    <span class="hljs-type">int</span> edge[MaxSize][MaxSize];<br>    <span class="hljs-type">int</span> vertexNum, edgeNum;<br>&#125;;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">DataType</span>&gt;<br>MGraph&lt;DataType&gt;::<span class="hljs-built_in">MGraph</span>(DataType a[], <span class="hljs-type">int</span> n, <span class="hljs-type">int</span> e) &#123;<br>    <span class="hljs-type">int</span> i, j, k;<br>    vertexNum = n; edgeNum = e;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; vertexNum; i++)<br>        vertex[i] = a[i];<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; vertexNum; i++)<br>        <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; vertexNum; j++)<br>            edge[i][j] = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; k &lt; edgeNum; k++) &#123;<br>        cout &lt;&lt; <span class="hljs-string">&quot;请输入边依附的两个顶点的编号：&quot;</span>;<br>        cin &gt;&gt; i &gt;&gt; j;<br>        edge[i][j] = <span class="hljs-number">1</span>; edge[j][i] = <span class="hljs-number">1</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">DataType</span>&gt;<br><span class="hljs-type">void</span> MGraph&lt;DataType&gt;::<span class="hljs-built_in">DFTraverse</span>(<span class="hljs-type">int</span> v) &#123;<br>    cout &lt;&lt; vertex[v]; visited[v] = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; vertexNum; j++)<br>        <span class="hljs-keyword">if</span> (edge[v][j] == <span class="hljs-number">1</span> &amp;&amp; visited[j] == <span class="hljs-number">0</span>) <span class="hljs-built_in">DFTraverse</span>(j);<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">DataType</span>&gt;<br><span class="hljs-type">void</span> MGraph&lt;DataType&gt;::<span class="hljs-built_in">BFTraverse</span>(<span class="hljs-type">int</span> v) &#123;<br>    <span class="hljs-type">int</span> w, j, Q[MaxSize];<br>    <span class="hljs-type">int</span> front = <span class="hljs-number">-1</span>, rear = <span class="hljs-number">-1</span>;<br>    cout &lt;&lt; vertex[v]; visited[v] = <span class="hljs-number">1</span>; Q[++rear] = v;<br>    <span class="hljs-keyword">while</span> (front != rear) &#123;<br>        w = Q[++front];<br>        <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; vertexNum; j++)<br>            <span class="hljs-keyword">if</span> (edge[w][j] == <span class="hljs-number">1</span> &amp;&amp; visited[j] == <span class="hljs-number">0</span>) &#123;<br>                cout &lt;&lt; vertex[j]; visited[j] = <span class="hljs-number">1</span>; Q[++rear] = j;<br>            &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> i;<br>    string ch[] = &#123; <span class="hljs-string">&quot;V1&quot;</span>,<span class="hljs-string">&quot;V2&quot;</span>,<span class="hljs-string">&quot;V3&quot;</span>,<span class="hljs-string">&quot;V4&quot;</span>,<span class="hljs-string">&quot;V5&quot;</span> &#125;;<br>    MGraph&lt;string&gt; MG&#123; ch, <span class="hljs-number">5</span>, <span class="hljs-number">6</span> &#125;;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; MaxSize; i++)<br>        visited[i] = <span class="hljs-number">0</span>;<br>    cout &lt;&lt; <span class="hljs-string">&quot;\n深度优先遍历序列是：&quot;</span> &lt;&lt; endl;<br>    MG.<span class="hljs-built_in">DFTraverse</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; MaxSize; i++)<br>        visited[i] = <span class="hljs-number">0</span>;<br>    cout &lt;&lt; <span class="hljs-string">&quot;\n广度优先遍历序列是：&quot;</span> &lt;&lt; endl;<br>    MG.<span class="hljs-built_in">BFTraverse</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="邻接表"><a href="#邻接表" class="headerlink" title="邻接表"></a>邻接表</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">EdgeNode</span><span class="hljs-comment">//定义边表结点</span><br>&#123;<br><span class="hljs-type">int</span> adjvex;<span class="hljs-comment">//邻接点域</span><br>EdgeNode* next;<br>&#125;;<br><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">DataType</span>&gt;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">VertexNode</span><span class="hljs-comment">//定义顶点表结点</span><br>&#123;<br>DataType vertex;<br>EdgeNode* firstEdge;<br>&#125;;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MaxSize = <span class="hljs-number">10</span>;<span class="hljs-comment">//图的最多顶点数</span><br><span class="hljs-type">int</span> visited[MaxSize] = &#123; <span class="hljs-number">0</span> &#125;;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">DataType</span>&gt;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ALGraph</span><br>&#123;<br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">ALGraph</span>(DataType a[], <span class="hljs-type">int</span> n, <span class="hljs-type">int</span> e);<span class="hljs-comment">//构造函数</span><br>~<span class="hljs-built_in">ALGraph</span>();<span class="hljs-comment">//析构函数</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">DFTraverse</span><span class="hljs-params">(<span class="hljs-type">int</span> v)</span></span>;<span class="hljs-comment">//深度</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">BEFraverse</span><span class="hljs-params">(<span class="hljs-type">int</span> v)</span></span>;<span class="hljs-comment">//广度</span><br><span class="hljs-keyword">private</span>:<br>VertexNode&lt;DataType&gt; adjlist[MaxSize];<span class="hljs-comment">//存放顶点表</span><br><span class="hljs-type">int</span> vertexNum, edgeNum;<span class="hljs-comment">//图的顶点数和边数</span><br>&#125;;<br><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">DataType</span>&gt;<br>ALGraph&lt;DataType&gt;::<span class="hljs-built_in">ALGraph</span>(DataType a[], <span class="hljs-type">int</span> n, <span class="hljs-type">int</span> e)<br>&#123;<br><span class="hljs-type">int</span> i, j, k;<br>EdgeNode* s = <span class="hljs-literal">nullptr</span>;<br>vertexNum = m;<br>edgeNum = e;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; vertexNum; i++)<br>&#123;<br>adjlist[i].vertex = a[i];<br>adjlist[i].firstEdge = <span class="hljs-literal">NULL</span>;<br>&#125;<br><span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; k &lt; edgeNum; k++)<span class="hljs-comment">//依次输入每一条边</span><br>&#123;<br>cout &lt;&lt; <span class="hljs-string">&quot;输入边所依付的两个顶点的编号：&quot;</span>;<br>cin &gt;&gt; i &gt;&gt; j;<br>s = <span class="hljs-keyword">new</span> EdgeNode;<br>s-&gt;adjvex = j;<br>s-&gt;next = adjlist[i].firstEdge;<br>adjlist[i].firstEdge = s;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">DataType</span>&gt;<br>ALGraph&lt;DataType&gt;::~<span class="hljs-built_in">ALGraph</span>()<br>&#123;<br>EdgeNode* p = <span class="hljs-literal">NULL</span>, * q = <span class="hljs-literal">NULL</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; vertexNum; i++)<br>&#123;<br>p = q = adjlist[i].firstEdge;<br><span class="hljs-keyword">while</span> (p != <span class="hljs-literal">NULL</span>)<br>&#123;<br>p = p-&gt;next;<br><span class="hljs-keyword">delete</span> q;<br>q = p;<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">DataType</span>&gt;<br><span class="hljs-type">void</span> ALGraph&lt;DataType&gt;::<span class="hljs-built_in">DFTraverse</span>(<span class="hljs-type">int</span> v)<br>&#123;<br><span class="hljs-type">int</span> j;<br>EdgeNode* p = null;<br>cout &lt;&lt; adjlist[v].vertex;<br>visited[v] = <span class="hljs-number">1</span>;<br>p = adjlist[v].firstEdge;<br><span class="hljs-keyword">while</span> (p != <span class="hljs-literal">NULL</span>)<br>&#123;<br>j = p-&gt;adjvex;<br><span class="hljs-keyword">if</span> (visited[j]==<span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-built_in">DFTraverse</span>(j);<br>&#125;<br>p = p-&gt;next;<br>&#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">//测试数据是图6-20(a)，边是(0 1)(0 3)(0 4)(1 2)(2 4)(3 2)(3 4)</span><br>string ch[] = &#123; <span class="hljs-string">&#x27;V1&#x27;</span>,<span class="hljs-string">&#x27;V2&#x27;</span>,<span class="hljs-string">&#x27;V3&#x27;</span>,<span class="hljs-string">&#x27;V4&#x27;</span>,<span class="hljs-string">&#x27;V5&#x27;</span> &#125;;<br><span class="hljs-type">int</span> i;<br><span class="hljs-function">ALGraph&lt;<span class="hljs-type">char</span>&gt; <span class="hljs-title">ALG</span><span class="hljs-params">(ch, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>)</span></span>;               <span class="hljs-comment">//建立具有5个顶点6条边的有向图</span><br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; MaxSize; i++)<br>visited[i] = <span class="hljs-number">0</span>;<br>cout &lt;&lt; <span class="hljs-string">&quot;深度优先遍历序列是：&quot;</span>;<br>ALG.<span class="hljs-built_in">DFTraverse</span>(<span class="hljs-number">0</span>);                       <span class="hljs-comment">//从顶点0出发进行深度优先遍历</span><br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; MaxSize; i++)<br>visited[i] = <span class="hljs-number">0</span>;<br>cout &lt;&lt; <span class="hljs-string">&quot;广度优先遍历序列是：&quot;</span>;<br>ALG.<span class="hljs-built_in">BFTraverse</span>(<span class="hljs-number">0</span>);                      <span class="hljs-comment">//从顶点0出发进行广度优先遍历</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://cyberdownload.anrunlu.net/FqL91OBssRscbirgk2-0714eojo6&quot; srcset=&quot;/img/loading.gif&quot; lazyload alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;邻接矩阵&quot;</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://w1ndys.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="数据结构作业" scheme="https://w1ndys.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="实验" scheme="https://w1ndys.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%9C%E4%B8%9A/%E5%AE%9E%E9%AA%8C/"/>
    
    
    <category term="数据结构作业" scheme="https://w1ndys.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>网络服务扫描实验</title>
    <link href="https://w1ndys.github.io/2023/11/28/Network_Service_Scanning_Experiments/"/>
    <id>https://w1ndys.github.io/2023/11/28/Network_Service_Scanning_Experiments/</id>
    <published>2023-11-28T11:45:23.826Z</published>
    <updated>2023-11-28T11:48:37.556Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>老师发了个ppt复现一下，顺便发在博客上了</p></blockquote><h1 id="网络服务扫描实验"><a href="#网络服务扫描实验" class="headerlink" title="网络服务扫描实验"></a>网络服务扫描实验</h1><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p>Metasploit工具                        1套</p><p>PC机（win10）                        1台</p><h2 id="预习要求"><a href="#预习要求" class="headerlink" title="预习要求"></a>预习要求</h2><p>做好实验预习，复习网络服务有关内容。</p><p>熟悉实验过程和基本操作流程。</p><p>做好预习报告。</p><h2 id="实验任务"><a href="#实验任务" class="headerlink" title="实验任务"></a>实验任务</h2><p>扫描当前机器的网络服务</p><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><p>一台安装了Metasploit的计算机。</p><h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><p>1.Telnet服务相关知识</p><p>2.SSH服务相关知识</p><p>3.数据库相关知识</p><h2 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h2><h3 id="1-Telnet-version模块"><a href="#1-Telnet-version模块" class="headerlink" title="1.Telnet_version模块"></a>1.Telnet_version模块</h3><h4 id="（1）使用use命令使用telnet-version模块。"><a href="#（1）使用use命令使用telnet-version模块。" class="headerlink" title="（1）使用use命令使用telnet_version模块。"></a>（1）使用use命令使用telnet_version模块。</h4><p> msf &gt; use auxiliary&#x2F;scanner&#x2F;telnet&#x2F;telnet_version</p><p><img src="/img/Metasploit-review/ppp-20231128184410056.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128184410056"></p><h4 id="（2）通过show命令查看模块的设置选项。"><a href="#（2）通过show命令查看模块的设置选项。" class="headerlink" title="（2）通过show命令查看模块的设置选项。"></a>（2）通过show命令查看模块的设置选项。</h4><p> msf auxiliary(telnet_version) &gt; show options</p><p><img src="/img/Metasploit-review/ppp-20231128184439505.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128184439505"></p><blockquote><p>其中Name表示的是需要设置的选项的名称，Current表示的是该选项目前默认的设置值，Setting表示是否进行了设置，Required则表示的是该选项是否必须设置，yes表示必须进行设置，而no则表示可以设置也可以不进行设置。Description则表示的是对选项的介绍。最重要的选项是RHOSTS，即目标地址范围或CIDR标识符。也就是要扫描的地址范围设置。</p></blockquote><h4 id="（3）使用set命令设置目标地址范围。"><a href="#（3）使用set命令设置目标地址范围。" class="headerlink" title="（3）使用set命令设置目标地址范围。"></a>（3）使用set命令设置目标地址范围。</h4><p> msf auxiliary(telnet_version) &gt; set rhosts 10.10.10.0&#x2F;24</p><p>设置后的界面显示如下所示：</p><p><img src="/img/Metasploit-review/ppp-20231128184617822.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128184617822"></p><h4 id="（4）使用set命令设置并发线程的数量。"><a href="#（4）使用set命令设置并发线程的数量。" class="headerlink" title="（4）使用set命令设置并发线程的数量。"></a>（4）使用set命令设置并发线程的数量。</h4><p> msf auxiliary(telnet_version) &gt; set threads 100</p><p>设置后的界面显示如下所示：</p><p><img src="/img/Metasploit-review/ppp-20231128184648890.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128184648890"></p><h4 id="（5）使用run命令来执行扫描。"><a href="#（5）使用run命令来执行扫描。" class="headerlink" title="（5）使用run命令来执行扫描。"></a>（5）使用run命令来执行扫描。</h4><p> msf auxiliary(telnet_version) &gt; run</p><p><img src="/img/Metasploit-review/ppp-20231128184714570.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128184714570"></p><p><img src="/img/Metasploit-review/ppp-20231128184737533.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128184737533"></p><h3 id="2-SSH-version模块"><a href="#2-SSH-version模块" class="headerlink" title="2.SSH_version模块"></a>2.SSH_version模块</h3><h4 id="（1）使用use命令使用ssh-version模块。"><a href="#（1）使用use命令使用ssh-version模块。" class="headerlink" title="（1）使用use命令使用ssh_version模块。"></a>（1）使用use命令使用ssh_version模块。</h4><p> msf &gt; use auxiliary&#x2F;scanner&#x2F;ssh&#x2F;ssh_version</p><p><img src="/img/Metasploit-review/ppp-20231128185532984.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128185532984"></p><h4 id="（2）通过show命令查看模块的设置选项。-1"><a href="#（2）通过show命令查看模块的设置选项。-1" class="headerlink" title="（2）通过show命令查看模块的设置选项。"></a>（2）通过show命令查看模块的设置选项。</h4><p><img src="/img/Metasploit-review/ppp-20231128185622700.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128185622700"></p><blockquote><p>同telnet_version模块相同，ssh_version扫描模块的设置选项也包括Name、Current、Setting、Required和Description五部分，所表示的含义也相同。</p></blockquote><h4 id="（3）使用set命令设置目标地址范围。-1"><a href="#（3）使用set命令设置目标地址范围。-1" class="headerlink" title="（3）使用set命令设置目标地址范围。"></a>（3）使用set命令设置目标地址范围。</h4><p> msf auxiliary(ssh_version) &gt; set rhosts 10.10.10.0&#x2F;24</p><p><img src="/img/Metasploit-review/ppp-20231128190444297.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128190444297"></p><h4 id="（4）使用set命令设置并发线程的数量。-1"><a href="#（4）使用set命令设置并发线程的数量。-1" class="headerlink" title="（4）使用set命令设置并发线程的数量。"></a>（4）使用set命令设置并发线程的数量。</h4><p> msf auxiliary(ssh_version) &gt; set threads 100</p><p><img src="/img/Metasploit-review/ppp-20231128190503895.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128190503895"></p><h4 id="（5）使用run命令来执行扫描。-1"><a href="#（5）使用run命令来执行扫描。-1" class="headerlink" title="（5）使用run命令来执行扫描。"></a>（5）使用run命令来执行扫描。</h4><p> msf auxiliary(ssh_version) &gt; run</p><p><img src="/img/Metasploit-review/ppp-20231128190518744.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128190518744"></p><h3 id="3-SSH-login模块"><a href="#3-SSH-login模块" class="headerlink" title="3.SSH_login模块"></a>3.SSH_login模块</h3><h4 id="（1）使用use命令使用ssh-login模块。"><a href="#（1）使用use命令使用ssh-login模块。" class="headerlink" title="（1）使用use命令使用ssh_login模块。"></a>（1）使用use命令使用ssh_login模块。</h4><p> msf &gt; use auxiliary&#x2F;scanner&#x2F;ssh&#x2F;ssh_login</p><p><img src="/img/Metasploit-review/ppp-20231128191323632.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128191323632"></p><h4 id="（2）通过show命令查看模块的设置选项。-2"><a href="#（2）通过show命令查看模块的设置选项。-2" class="headerlink" title="（2）通过show命令查看模块的设置选项。"></a>（2）通过show命令查看模块的设置选项。</h4><p> msf auxiliary(ssh_login) &gt; show options</p><p><img src="/img/Metasploit-review/ppp-20231128191341256.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128191341256"></p><blockquote><p>与前面相比，ssh_login模块用到的设置项多了很多。下面进行简单的介绍：</p><p>BLANK_PASSWORDS，也就是空白密码的意思，即前面讲到的会先默认对空白密码进行验证。</p><p>BRUTEFORCE_SPEED，暴力破解的速度，从0到5可选。</p><p>PASSWORD，即准备暴力破解使用的密码，虽然不是必须的，但是没有进行暴力破解的密码，模块在验证完空密码后就停止了，因此这个其实是必须设置的。</p><p>PASS_FILE，即准备暴力破解使用的密码文件，PASSWORD是指定单个的密码，而PASS_FILE则是将密码字典放到一个文件里，并且每行只能放置一个密码。</p><p>STOP_ON_SUCCESS，即如果得到主机正在工作的消息，则停止试探密码，一般是设为false的。</p><p>USERNAME，同PASSWORD一样，虽然要求不是必须，但是在实际使用中是需要指定的。</p><p>USERPASS_FILE，是同时存储了密码和用户名的口令字典文件。每行包括一个用户名和对应的一个密码，中间用一个空格分隔开。</p><p>USER_AS_PASS，将所用用户名作为它的密码进行猜测。这在实际使用中很有用，因为经常有些安全意识薄弱的管理员这样设置密码。</p><p>USER_FILE，存储试探用户名的文件，同样每行一个用户名。</p><p>VERBOSE，是否在窗口输出所有的尝试情况，默认是输出的。</p></blockquote><p>在口令猜测时明显需要设置的项或者说可以设置的项变的多了很多，这就需要根据实际情况来进行设置。下面，写一个简单的例子：</p><p>根据上次实验的结果，选取10.10.10.254</p><h4 id="（3）使用set命令设置目标地址范围。-2"><a href="#（3）使用set命令设置目标地址范围。-2" class="headerlink" title="（3）使用set命令设置目标地址范围。"></a>（3）使用set命令设置目标地址范围。</h4><p> msf auxiliary(ssh_login) &gt; set rhosts 10.10.10.254</p><p><img src="/img/Metasploit-review/ppp-20231128191448663.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128191448663"></p><h4 id="（4）使用set命令设置参数username的值。"><a href="#（4）使用set命令设置参数username的值。" class="headerlink" title="（4）使用set命令设置参数username的值。"></a>（4）使用set命令设置参数username的值。</h4><p>在这里仅尝试用户名为root的情况，因此代码如下：</p><p> msf auxiliary(ssh_login) &gt; set username root</p><p><img src="/img/Metasploit-review/ppp-20231128191528700.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128191528700"></p><h4 id="（5）使用set命令设置参数pass-file的值。"><a href="#（5）使用set命令设置参数pass-file的值。" class="headerlink" title="（5）使用set命令设置参数pass_file的值。"></a>（5）使用set命令设置参数pass_file的值。</h4><p>将名称为words.txt的密码字典放在了桌面，因此代码如下：</p><p> msf auxiliary(ssh_login) &gt; set pass_file &#x2F;root&#x2F;Desktop&#x2F;words.txt</p><p><img src="/img/Metasploit-review/ppp-20231128191551676.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128191551676"></p><h4 id="（6）使用set命令设置并发线程的数量。"><a href="#（6）使用set命令设置并发线程的数量。" class="headerlink" title="（6）使用set命令设置并发线程的数量。"></a>（6）使用set命令设置并发线程的数量。</h4><p> msf auxiliary(ssh_login) &gt; set threads 100</p><p><img src="/img/Metasploit-review/ppp-20231128191604997.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128191604997"></p><h4 id="（7）使用run命令来执行扫描。"><a href="#（7）使用run命令来执行扫描。" class="headerlink" title="（7）使用run命令来执行扫描。"></a>（7）使用run命令来执行扫描。</h4><p> msf auxiliary(ssh_login) &gt; run</p><p><img src="/img/Metasploit-review/ppp-20231128192402211.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128192402211"></p><h3 id="4-Mssql-ping模块"><a href="#4-Mssql-ping模块" class="headerlink" title="4.Mssql_ping模块"></a>4.Mssql_ping模块</h3><h4 id="（1）使用use命令使用mssql-ping模块。"><a href="#（1）使用use命令使用mssql-ping模块。" class="headerlink" title="（1）使用use命令使用mssql_ping模块。"></a>（1）使用use命令使用mssql_ping模块。</h4><p> msf &gt; use auxiliary&#x2F;scanner&#x2F;mssql&#x2F;mssql_ping </p><p><img src="/img/Metasploit-review/ppp-20231128192510859.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128192510859"></p><h4 id="（2）通过show命令查看模块的设置选项。-3"><a href="#（2）通过show命令查看模块的设置选项。-3" class="headerlink" title="（2）通过show命令查看模块的设置选项。"></a>（2）通过show命令查看模块的设置选项。</h4><p> msf auxiliary(mssql_ping) &gt; show options</p><p><img src="/img/Metasploit-review/ppp-20231128192529233.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128192529233"></p><blockquote><p>与前面不同的是在mssql_ping模块用到了USERNAME设置项，这起始与Microsoft SQL Server安装时候的一个默认设置有关。在初次安装服务器的时候，会默认创建sa或系统管理员用户。因此，这里USERNAME设置项的默认设置是sa，在这里也不准备进行更改。</p></blockquote><h4 id="（3）使用set命令设置目标地址范围。-3"><a href="#（3）使用set命令设置目标地址范围。-3" class="headerlink" title="（3）使用set命令设置目标地址范围。"></a>（3）使用set命令设置目标地址范围。</h4><p> msf auxiliary(mssql_ping) &gt; set RHOSTS 202.118.176.0&#x2F;24</p><p><img src="/img/Metasploit-review/ppp-20231128192652684.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128192652684"></p><h4 id="（4）使用set命令设置并发线程的数量。-2"><a href="#（4）使用set命令设置并发线程的数量。-2" class="headerlink" title="（4）使用set命令设置并发线程的数量。"></a>（4）使用set命令设置并发线程的数量。</h4><p> msf auxiliary(mssql_ping) &gt; set THREADS 50</p><p><img src="/img/Metasploit-review/ppp-20231128192713890.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128192713890"></p><h4 id="（5）使用run命令来执行扫描。-2"><a href="#（5）使用run命令来执行扫描。-2" class="headerlink" title="（5）使用run命令来执行扫描。"></a>（5）使用run命令来执行扫描。</h4><p> msf auxiliary(mssql_ping) &gt; run</p><p><img src="/img/Metasploit-review/ppp-20231128192801766.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128192801766"></p><h3 id="5-Tnslsnr-version模块"><a href="#5-Tnslsnr-version模块" class="headerlink" title="5.Tnslsnr_version模块"></a>5.Tnslsnr_version模块</h3><h4 id="（1）使用use命令使用tnslsnr-version模块。"><a href="#（1）使用use命令使用tnslsnr-version模块。" class="headerlink" title="（1）使用use命令使用tnslsnr_version模块。"></a>（1）使用use命令使用tnslsnr_version模块。</h4><p> msf &gt; use auxiliary&#x2F;scanner&#x2F;oracle&#x2F;tnslsnr_version </p><p><img src="/img/Metasploit-review/ppp-20231128192902843.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128192902843"></p><h4 id="（2）通过show命令查看模块的设置选项。-4"><a href="#（2）通过show命令查看模块的设置选项。-4" class="headerlink" title="（2）通过show命令查看模块的设置选项。"></a>（2）通过show命令查看模块的设置选项。</h4><p> msf auxiliary(tnslsnr_version) &gt; show options</p><p><img src="/img/Metasploit-review/ppp-20231128192919281.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128192919281"></p><h4 id="（3）使用set命令设置目标地址范围。-4"><a href="#（3）使用set命令设置目标地址范围。-4" class="headerlink" title="（3）使用set命令设置目标地址范围。"></a>（3）使用set命令设置目标地址范围。</h4><p> msf auxiliary(tnslsnr_version)&gt; set RHOSTS 10.10.10.0&#x2F;24</p><p><img src="/img/Metasploit-review/ppp-20231128192949628.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128192949628"></p><h4 id="（4）使用set命令设置并发线程的数量。-3"><a href="#（4）使用set命令设置并发线程的数量。-3" class="headerlink" title="（4）使用set命令设置并发线程的数量。"></a>（4）使用set命令设置并发线程的数量。</h4><p> msf auxiliary(tnslsnr_version) &gt; set THREADS 50</p><p><img src="/img/Metasploit-review/ppp-20231128193004063.png" srcset="/img/loading.gif" lazyload alt="image-20231128193004063"></p><h4 id="（5）使用run命令来执行扫描。-3"><a href="#（5）使用run命令来执行扫描。-3" class="headerlink" title="（5）使用run命令来执行扫描。"></a>（5）使用run命令来执行扫描。</h4><p> msf auxiliary(tnslsnr_version) &gt; run</p><p><img src="/img/Metasploit-review/ppp-20231128193019150.png" srcset="/img/loading.gif" lazyload alt="ppp-20231128193019150"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;老师发了个ppt复现一下，顺便发在博客上了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;网络服务扫描实验&quot;&gt;&lt;a href=&quot;#网络服务扫描实验&quot; class=&quot;headerlink&quot; title=&quot;网络服务扫描实验&quot;&gt;&lt;/a&gt;网络服务扫描</summary>
      
    
    
    
    <category term="网络安全" scheme="https://w1ndys.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    <category term="网络服务扫描实验" scheme="https://w1ndys.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E6%89%AB%E6%8F%8F%E5%AE%9E%E9%AA%8C/"/>
    
    
    <category term="网络安全" scheme="https://w1ndys.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    <category term="网络服务扫描实验" scheme="https://w1ndys.github.io/tags/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E6%89%AB%E6%8F%8F%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>RSA的一些解密脚本</title>
    <link href="https://w1ndys.github.io/2023/11/23/CTF_Crypto_RSA/"/>
    <id>https://w1ndys.github.io/2023/11/23/CTF_Crypto_RSA/</id>
    <published>2023-11-23T15:14:10.539Z</published>
    <updated>2023-11-25T09:47:21.408Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><p>1.<a href="#1.%E5%B7%B2%E7%9F%A5(p,q,e),%E6%B1%82d">已知(p,q,e),求d</a></p><p>2.<a href="#2.%E5%B7%B2%E7%9F%A5(p,q,e,c)%EF%BC%8C%E6%B1%82m">已知(p,q,e,c)，求m</a></p><p>3.<a href="#3.%E5%B7%B2%E7%9F%A5(p,q,dp,dq,c)%EF%BC%8C%E6%B1%82m">已知(p,q,dp,dq,c)，求m</a></p><p>4.<a href="#4.%E5%B7%B2%E7%9F%A5(e,dp,n,c)%EF%BC%8C%E6%B1%82m">已知(e,dp,n,c)，求m</a></p><p>5.<a href="#5.%E5%B7%B2%E7%9F%A5(n,e1,e2,c1,c2)%EF%BC%8C%E6%B1%82m">已知(n,e1,e2,c1,c2)，求m</a></p><p>6.<a href="#6.%E5%B7%B2%E7%9F%A5(e,n1,c1,n2,c2)%EF%BC%8C%E6%B1%82m">已知(e,n1,c1,n2,c2)，求m</a></p><p>7.<a href="#7.%E5%B7%B2%E7%9F%A5(p+q,p-q,e,c)%EF%BC%8C%E6%B1%82m">已知(p+q,p-q,e,c)，求m</a></p><p>8.<a href="#8.%E5%B7%B2%E7%9F%A5(e,n,c)%EF%BC%8C%E6%B1%82m">已知(e,n,c)，求m</a></p><p>9.<a href="#9.%E5%B7%B2%E7%9F%A5(e,n,c)%EF%BC%8C%E6%B1%82m%EF%BC%88e%E6%9E%81%E5%B0%8F%EF%BC%8C%E5%A6%823%EF%BC%8C%E4%BD%8E%E5%8A%A0%E5%AF%86%E6%8C%87%E6%95%B0%E6%94%BB%E5%87%BB%EF%BC%89">已知(e,n,c)，求m（e极小，如3，低加密指数攻击）</a></p><p>10.<a href="#10.%E5%B7%B2%E7%9F%A5(e,n,c)%EF%BC%8C%E6%B1%82m%EF%BC%88e%E5%BE%88%E5%A4%A7%EF%BC%8C%E4%BD%8E%E8%A7%A3%E5%AF%86%E6%8C%87%E6%95%B0%E6%94%BB%E5%87%BB%EF%BC%89">已知(e,n,c)，求m（e很大，低解密指数攻击）</a></p><p>11.<a href="#11.%E5%B7%B2%E7%9F%A5%EF%BC%88c,n,p%EF%BC%88q-1%EF%BC%89,q*%EF%BC%88p-1%EF%BC%89%EF%BC%89%EF%BC%8C%E6%B1%82m">已知(c,n,p(q-1),q(p-1))，求m</a></p><p>参考：<a href="http://t.csdnimg.cn/YEnxe">CTF中关于RSA的常见题型_abtgu的博客-CSDN博客_ctf rsa题目</a></p><p><strong>1、RSA算法需要的基础知识：</strong></p><p><img src="/img/Crypto-RSA/e919d28a04e3408dadf817f324a9a3d8.png" srcset="/img/loading.gif" lazyload alt="img"></p><p>（5）判断互质数：</p><p>1）两个质数一定是互质数。</p><p>2）一个质数如果不能整除另一个合数（合数是指在大于1的整数中除了能被1和本身整除外，还能被其他数（0除外）整除的数），这两个数为互质数。例如，3与10、5与 26。</p><p>3）1不是质数也不是合数，它和任何一个自然数在一起都是互质数。</p><p>4）相邻的两个自然数是互质数。如 15与16。</p><p>5）相邻的两个奇数是互质数。如 49与 51。</p><p>6）大数是质数的两个数是互质数。如97与88。</p><p>7）小数是质数，大数不是小数的倍数的两个数是互质数。如 7和16。</p><p>8）两个数都是合数（二数差又较大），小数所有的质因数，都不是大数的约数（因数），这两个数是互质数。如357与715，357&#x3D;3×7×17，而3、7和17都不是715的约数，这两个数为互质数。</p><p>等等。。。</p><p>（6）什么是模运算与模指数运算？</p><p>模运算是整数运算，有一个整数m，以n为模做模运算，即m mod n。让m被n整除，只取所得的余数作为结果，就叫做模运算。例如，10 mod 3&#x3D;1；26 mod 6&#x3D;2；28 mod 2 &#x3D;0等等。</p><p>模指数运算就是先做指数运算，取其结果再做模运算。如(5^3) mod 7 &#x3D; (125 mod 7) &#x3D; 6。</p><p><strong>2、RSA加解密</strong></p><p>（1）RSA加密算法由五个部分组成：</p><p>原文(Message)、密文(Ciphertext)、公钥(Public Key)、私钥(Secret Key)、加密算法(Encryption)、解密算法(Decryption)。</p><p>（2）RSA求公钥私钥步骤如下：</p><p>1）随机选择两个不相同的素数 p,q 。</p><p>2）将p,q相乘，记为 n &#x3D; p × q 。</p><p>3）计算n的欧拉函数φ(n)，当p,q为不相同的素数时，φ(n)&#x3D;(p−1)(q−1)。</p><p>4）随机选择一个整数e，满足两个条件：φ(n)与e互质，且 1 &lt; e &lt;φ(n)。</p><p>5）计算e对于φ(n)的模反元素d，也就是说找到一个d满足ed &#x3D; 1modφ(n)。这个式子等价于ed &#x3D; kφ(n) + 1，实际上就是对于方程ed − kφ(n) &#x3D; 1求(d,k)的整数解。这个方程可以用扩展欧几里得算法求解。</p><p>6）最终把(e,n)封装成公钥，(d,n)封装成私钥。</p><p>（3）RSA加密与解密</p><p><img src="/img/Crypto-RSA/70a02a11bade4ecd8cb39dc976de7669.png" srcset="/img/loading.gif" lazyload alt="img"></p><p><img src="/img/Crypto-RSA/934d5831addc4e1bbdf45d0b7c43d937.png" srcset="/img/loading.gif" lazyload alt="img"></p><p>（4）RSA算法的破解</p><p>1）由于公钥中n已知，只需计算出d，便可通过M&#x3D;Cd mod n计算出明文M。</p><p>2）由于方程ed − kφ(n) &#x3D; 1，公钥中e已知，我们只需要知道φ(n)的值便可求出(d,k)的整数解。</p><p>3）由于φ(n) &#x3D; （p - 1）(q - 1)，我们需要求出p，q的值。</p><p>4）由于n &#x3D; p  q，我们需要对n做因数分解。</p><p>只要n可以被因数分解为p，q，我们便可反推破解私钥，从而破解密文。</p><hr><h4 id="1-已知-p-q-e-求d"><a href="#1-已知-p-q-e-求d" class="headerlink" title="1.已知(p,q,e),求d"></a>1.已知(p,q,e),求d</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stylus">import gmpy2<br><span class="hljs-selector-tag">p</span> = <br><span class="hljs-selector-tag">q</span> = <br>e = <br>phi = (p-<span class="hljs-number">1</span>)(q-<span class="hljs-number">1</span>)<br>d = gmpy2<span class="hljs-selector-class">.invert</span>(e,phi)<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(d)</span></span><br></code></pre></td></tr></table></figure><h4 id="2-已知-p-q-e-c-，求m"><a href="#2-已知-p-q-e-c-，求m" class="headerlink" title="2.已知(p,q,e,c)，求m"></a>2.已知(p,q,e,c)，求m</h4><p>密文c，明文m</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs makefile">import gmpy2 <br>import binascii<br> <br>c = <br>e =  <br>p = <br>q = <br> <br><span class="hljs-comment"># 计算私钥 d</span><br>phi = (p-1)*(q-1)<br>d = gmpy2.invert(e, phi)<br> <br><span class="hljs-comment"># 解密 m</span><br>m = gmpy2.powmod(c,d,p*q)<br><span class="hljs-section">print(binascii.unhexlify(hex(m)[2:]))</span><br></code></pre></td></tr></table></figure><h4 id="3-已知-p-q-dp-dq-c-，求m"><a href="#3-已知-p-q-dp-dq-c-，求m" class="headerlink" title="3.已知(p,q,dp,dq,c)，求m"></a>3.已知(p,q,dp,dq,c)，求m</h4><p><img src="/img/Crypto-RSA/c13f4126471c460e9566e37a4e5f77ac.png" srcset="/img/loading.gif" lazyload alt="img"></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs makefile">import gmpy2<br>import binascii<br>p =<br>q =<br>dp =<br>dq =<br>c =<br> <br>I = gmpy2.invert(p,q)<br>mp = gmpy2.powmod(c,dp,p)<br>mq = gmpy2.powmod(c,dq,q)<br> <br>m = ((I*(mp-mq))%q)*p+mp<br><span class="hljs-section">print(binascii.unhexlify(hex(m)[2:]))</span><br></code></pre></td></tr></table></figure><h4 id="4-已知-e-dp-n-c-，求m"><a href="#4-已知-e-dp-n-c-，求m" class="headerlink" title="4.已知(e,dp,n,c)，求m"></a>4.已知(e,dp,n,c)，求m</h4><p><img src="/img/Crypto-RSA/60178e8906e54a9b99bb29ec355f5ee9.png" srcset="/img/loading.gif" lazyload alt="img"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">import</span> gmpy2<br><span class="hljs-attribute">import</span> binascii<br><span class="hljs-attribute">e</span> = <br><span class="hljs-attribute">n</span> =<br><span class="hljs-attribute">dp</span> =<br><span class="hljs-attribute">c</span> =<br><span class="hljs-attribute">for</span> i in range(<span class="hljs-number">1</span>,e):<br>    <span class="hljs-attribute">if</span> (e*dp-<span class="hljs-number">1</span>)%i == <span class="hljs-number">0</span> and n%((e*dp-<span class="hljs-number">1</span>)//i+<span class="hljs-number">1</span>)==<span class="hljs-number">0</span>:<br>        <span class="hljs-attribute">q</span> = n//((e*dp-<span class="hljs-number">1</span>)//i+<span class="hljs-number">1</span>)<br>        <span class="hljs-attribute">phi</span> = (q-<span class="hljs-number">1</span>)*((e*dp-<span class="hljs-number">1</span>)//i)<br>        <span class="hljs-attribute">d</span> = gmpy2.invert(e,phi)<br>        <span class="hljs-attribute">m</span> = gmpy2.powmod(c,d,n)<br> <br><span class="hljs-attribute">print</span>(binascii.unhexlify(hex(m)[<span class="hljs-number">2</span>:]))<br></code></pre></td></tr></table></figure><h4 id="5-已知-n-e1-e2-c1-c2-，求m"><a href="#5-已知-n-e1-e2-c1-c2-，求m" class="headerlink" title="5.已知(n,e1,e2,c1,c2)，求m"></a>5.已知(n,e1,e2,c1,c2)，求m</h4><p><img src="/img/Crypto-RSA/358a70c21c954c42bb1f180851d998aa.png" srcset="/img/loading.gif" lazyload alt="img"></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs makefile">import gmpy2<br>import binascii<br> <br>n =<br>c1 = <br>c2 = <br>e1 = <br>e2 = <br> <br>s = gmpy2.gcdext(e1,e2)<br>a = s[1]<br>b = s[2]<br> <br>if a&lt;0:<br>    a = -a<br>    c1 = gmpy2.invert(c1,n)<br><span class="hljs-section">else:</span><br>    b = -b<br>    c2 = gmpy2.invert(c2,n)<br> <br>m = (gmpy2.powmod(c1,a,n)*gmpy2.powmod(c2,b,n))%n<br> <br><span class="hljs-section">print(binascii.unhexlify(hex(m)[2:]))</span><br></code></pre></td></tr></table></figure><h4 id="6-已知-e-n1-c1-n2-c2-，求m"><a href="#6-已知-e-n1-c1-n2-c2-，求m" class="headerlink" title="6.已知(e,n1,c1,n2,c2)，求m"></a>6.已知(e,n1,c1,n2,c2)，求m</h4><p><strong>解题思路：</strong> 两组数中e相同，n，c不同，求出n1与n2的最大公因数即为p，之后就可以得到q和d，从而求解m。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs makefile">import gmpy2<br>import binascii<br> <br>e = <br>n1 = <br>c1 = <br>n2 = <br>c2 = <br> <br>p1 = gmpy2.gcd(n1,n2)<br>q1 = n1 // p1<br>phi1 = (p1-1)*(q1-1)<br> <br>d1 = gmpy2.invert(e,phi1)<br>m1 = gmpy2.powmod(c1,d1,n1)<br> <br><span class="hljs-section">print(binascii.unhexlify(hex(m1)[2:]))</span><br> <br>p2 = gmpy2.gcd(n2,n1)<br>q2 = n2 // p2<br>phi2 = (p2-1)*(q2-1)<br> <br>d2 = gmpy2.invert(e,phi2)<br>m2 = gmpy2.powmod(c2,d2,n2)<br> <br><span class="hljs-section">print(binascii.unhexlify(hex(m2)[2:]))</span><br></code></pre></td></tr></table></figure><h4 id="7-已知-p-q-p-q-e-c-，求m"><a href="#7-已知-p-q-p-q-e-c-，求m" class="headerlink" title="7.已知(p+q,p-q,e,c)，求m"></a>7.已知(p+q,p-q,e,c)，求m</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs makefile">import gmpy2<br>import binascii<br>e=<br>a=<br>b=<br>c=<br> <br>p = (a+b)//2<br>q = (a-b)//2<br> <br>phi = (p-1)*(q-1)<br>d = gmpy2.invert(e,phi)<br> <br>m = gmpy2.powmod(c,d,p*q)<br><span class="hljs-section">print(binascii.unhexlify(hex(m)[2:]))</span><br> <br></code></pre></td></tr></table></figure><h4 id="8-已知-e-n-c-，求m"><a href="#8-已知-e-n-c-，求m" class="headerlink" title="8.已知(e,n,c)，求m"></a>8.已知(e,n,c)，求m</h4><p>解题思路：<br>可以分解n得到p,q</p><p>在线分解大整数网址:</p><p><a href="http://www.factordb.com/index.php">http://www.factordb.com/index.php</a></p><p>分解质因数工具 - 整数分解最多为70位</p><p>注意：在factordb中因为数过大而显示不全时，可以点击show查看完整数据，但是在复制数据时注意它的每一行都有空格，粘贴后要去掉</p><p><img src="/img/Crypto-RSA/9d7aa499bad5423189ad31ed01ab5267.png" srcset="/img/loading.gif" lazyload alt="img"></p><p><img src="/img/Crypto-RSA/b8f526c4255340a69671d2c54e87fd69.png" srcset="/img/loading.gif" lazyload alt="img"></p><p>若以上都不好用，则用yafu计算</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs makefile">import gmpy2<br>import binascii<br> <br>e = <br>n = <br>c = <br>p = <br>q = <br> <br>phi = (p-1)*(q-1)<br>d = gmpy2.invert(e,phi)<br>m = gmpy2.powmod(c,d,n)<br> <br><span class="hljs-section">print(binascii.unhexlify(hex(m)[2:]))</span><br></code></pre></td></tr></table></figure><h4 id="9-已知-e-n-c-，求m（e极小，如3，低加密指数攻击）"><a href="#9-已知-e-n-c-，求m（e极小，如3，低加密指数攻击）" class="headerlink" title="9.已知(e,n,c)，求m（e极小，如3，低加密指数攻击）"></a>9.已知(e,n,c)，求m（e极小，如3，低加密指数攻击）</h4><p><img src="/img/Crypto-RSA/a1c0f87f74c947a2a051aaad34821155.png" srcset="/img/loading.gif" lazyload alt="img"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs stylus">import gmpy2<br>import binascii<br> <br>e =<br>n =<br>c =<br> <br><span class="hljs-selector-tag">i</span> = <span class="hljs-number">0</span><br>while True:<br>    <span class="hljs-keyword">if</span> gmpy2<span class="hljs-selector-class">.iroot</span>((c+i*n),<span class="hljs-number">3</span>)<span class="hljs-selector-attr">[1]</span> == True:<br>        m = gmpy2<span class="hljs-selector-class">.iroot</span>((c+i*n),<span class="hljs-number">3</span>)<span class="hljs-selector-attr">[0]</span><br>        break<br>    <span class="hljs-selector-tag">i</span> += <span class="hljs-number">1</span><br> <br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(binascii.unhexlify(hex(m)</span></span><span class="hljs-selector-attr">[2:]</span>))<br></code></pre></td></tr></table></figure><h4 id="10-已知-e-n-c-，求m（e很大，低解密指数攻击）"><a href="#10-已知-e-n-c-，求m（e很大，低解密指数攻击）" class="headerlink" title="10.已知(e,n,c)，求m（e很大，低解密指数攻击）"></a>10.已知(e,n,c)，求m（e很大，低解密指数攻击）</h4><p><strong>解题思路：</strong> 题中e很大，故可知是<strong>低解密指数攻击</strong>。</p><p>可以使用破解脚本：求出d的值，文件下载地址<a href="https://gitcode.com/mirrors/pablocelayes/rsa-wiener-attack/overview?utm_source=csdn_github_accelerator">GitHub - pablocelayes&#x2F;rsa-wiener-attack: A Python implementation of the Wiener attack on RSA public-key encryption scheme.</a></p><p>（注意，这里要将破解脚本和rsa-wiener-attack的py文件放在同一个目录下）</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">import</span> binascii<br><span class="hljs-keyword">import</span> RSAwienerHacker<br> <br><span class="hljs-title">e</span> =<br><span class="hljs-title">n</span> =<br><span class="hljs-title">c</span> =<br> <br><span class="hljs-title">d</span> = <span class="hljs-type">RSAwienerHacker</span>.hack_RSA(e,n)<br><span class="hljs-title">m</span> = gmpy2.powmod(c,d,n)<br> <br><span class="hljs-title">print</span>(binascii.unhexlify(hex(m)[<span class="hljs-number">2</span>:]))<br> <br></code></pre></td></tr></table></figure><h4 id="11-已知（c-n-p（q-1）-q-（p-1）），求m"><a href="#11-已知（c-n-p（q-1）-q-（p-1）），求m" class="headerlink" title="11.已知（c,n,p（q-1）,q*（p-1）），求m"></a>11.已知（c,n,p（q-1）,q*（p-1）），求m</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs makefile">import gmpy2<br>from Crypto.Util.number import *<br><span class="hljs-comment">#pq = p*(q-1)</span><br><span class="hljs-comment">#qp = q*(p-1)</span><br>c= <br>n= <br>pq= <br>qp= <br> <br>e = 65537<br>p = n - pq<br>q = n - qp<br>phi = (p - 1)*(q - 1)<br> <br>d = gmpy2.invert(e,phi)<br>m = gmpy2.powmod(c,d,n)<br>print(long_to_bytes(m))<br> <br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;p&gt;1.&lt;a href=&quot;#1.%E5%B7%B2%E7%9F%A5(p,q,e),%E6%B1%82d&quot;&gt;已知(p,q,e),求d&lt;/a&gt;&lt;/</summary>
      
    
    
    
    <category term="CTF" scheme="https://w1ndys.github.io/categories/CTF/"/>
    
    <category term="密码学" scheme="https://w1ndys.github.io/categories/CTF/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
    <category term="CTF" scheme="https://w1ndys.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Mirai Administrator 机器人管理插件，好友/群管理，黑名单，宵禁</title>
    <link href="https://w1ndys.github.io/2023/11/20/bot_Mirai_Administrator/"/>
    <id>https://w1ndys.github.io/2023/11/20/bot_Mirai_Administrator/</id>
    <published>2023-11-20T03:25:24.754Z</published>
    <updated>2023-11-20T03:26:21.151Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mirai-Administrator"><a href="#Mirai-Administrator" class="headerlink" title="Mirai Administrator"></a>Mirai Administrator</h1><blockquote><p>基于 Mirai Console 的 管理员 Bot 及其标准</p></blockquote><p><a href="https://github.com/cssxsh/mirai-administrator/releases"><img src="https://img.shields.io/github/v/release/cssxsh/mirai-administrator" srcset="/img/loading.gif" lazyload alt="Release"></a><br><a href="https://repo1.maven.org/maven2/xyz/cssxsh/mirai/mirai-administrator/"><img src="https://img.shields.io/github/downloads/cssxsh/mirai-administrator/total" srcset="/img/loading.gif" lazyload alt="Downloads"></a><br><a href="https://search.maven.org/artifact/xyz.cssxsh.mirai/mirai-administrator"><img src="https://img.shields.io/maven-central/v/xyz.cssxsh.mirai/mirai-administrator" srcset="/img/loading.gif" lazyload alt="maven-central"></a><br><a href="https://www.codacy.com/gh/cssxsh/mirai-administrator/dashboard?utm_source=github.com&utm_medium=referral&utm_content=cssxsh/mirai-administrator&utm_campaign=Badge_Grade"><img src="https://app.codacy.com/project/badge/Grade/8be173fe96c74059bfedd6268b8e6f0c" srcset="/img/loading.gif" lazyload alt="Codacy Badge"></a></p><p><strong>使用前应该查阅的相关文档或项目</strong></p><ul><li><a href="https://github.com/mamoe/mirai/blob/dev/docs/UserManual.md">User Manual</a></li><li><a href="https://github.com/mamoe/mirai/blob/dev/mirai-console/docs/BuiltInCommands.md#permissioncommand">Permission Command</a></li><li><a href="https://github.com/project-mirai/chat-command">Chat Command</a></li></ul><p>本插件实现的功能有:</p><ul><li>联系人相关 自动审批，指令查看，用户留言</li><li>消息相关 发送消息，撤回消息</li><li>群管理相关 群消息审核，自动宵禁，自动清理不发言，禁言自动退群</li></ul><p>本插件提供<a href="https://mirai.mamoe.net/topic/972/mirai-administrator-%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%AE%A1%E7%90%86%E6%8F%92%E4%BB%B6-%E5%A5%BD%E5%8F%8B-%E7%BE%A4%E7%AE%A1%E7%90%86-%E9%BB%91%E5%90%8D%E5%8D%95-%E5%AE%B5%E7%A6%81/2?page=1#%E6%9C%8D%E5%8A%A1%E6%8E%A5%E5%8F%A3">服务接口</a>以供其他插件拓展功能<br>例如使用 <a href="https://github.com/gnuf0rce/mirai-content-censor">Mirai Content Censor</a> 依靠百度API审查群消息<br>例如使用 <a href="https://github.com/cssxsh/mirai-authenticator">Mirai Authenticator</a> 验证加群请求</p><h2 id="MCL-指令安装"><a href="#MCL-指令安装" class="headerlink" title="MCL 指令安装"></a>MCL 指令安装</h2><p><strong>请确认 mcl.jar 的版本是 2.1.0+</strong><br><code>./mcl --update-package xyz.cssxsh.mirai:mirai-administrator --channel maven-stable --type plugin</code></p><h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><p>注意: 使用前请确保可以 <a href="https://github.com/project-mirai/chat-command">在聊天环境执行指令</a><br><code>&lt;...&gt;</code>中的是指令名<br><code>[...]</code>表示参数，当<code>[...]</code>后面带<code>?</code>时表示参数可选</p><p>本插件指令权限ID 格式为 <code>xyz.cssxsh.mirai.plugin.mirai-administrator:command.*</code>, <code>*</code> 是指令的第一指令名<br>例如 <code>/send to 12345</code> 的权限ID为 <code>xyz.cssxsh.mirai.plugin.mirai-administrator:command.send</code><br>对 机器人发送的<strong>联系人请求</strong>通知消息 回复 <code>同意</code> 或 <code>不同意</code> 或 <code>拉黑</code> 即可处理<br>插件提供黑名单功能，使用指令 <code>/contact black u12345</code>, 即可拉黑用户，Bot将不响应用户动作（包括其他插件的功能）</p><h3 id="ADMINCONTACTCOMMAND"><a href="#ADMINCONTACTCOMMAND" class="headerlink" title="ADMINCONTACTCOMMAND"></a>ADMINCONTACTCOMMAND</h3><table><thead><tr><th align="left">Command</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>/&lt;contact&gt; &lt;delete&gt; [contact]</code></td><td align="left">删除联系人</td></tr><tr><td align="left"><code>/&lt;contact&gt; &lt;handle&gt; [id] [accept]? [black]?</code></td><td align="left">处理联系人申请</td></tr><tr><td align="left"><code>/&lt;contact&gt; &lt;request&gt;</code></td><td align="left">查看申请列表</td></tr><tr><td align="left"><code>/&lt;contact&gt; &lt;black&gt; &#123;permitteeIds&#125;</code></td><td align="left">拉黑</td></tr><tr><td align="left"><code>/&lt;contact&gt; &lt;white&gt; &#123;permitteeIds&#125;</code></td><td align="left">取消拉黑</td></tr><tr><td align="left"><code>/&lt;contact&gt; &lt;backup&gt;</code></td><td align="left">触发备份功能</td></tr></tbody></table><ol><li><code>id</code> 是 事件id 或 好友id 或 群id</li><li><code>accept</code> 和 <code>black</code> 参数为 <code>true</code>, <code>yes</code>, <code>enabled</code>, <code>on</code>, <code>1</code> 时表示 <code>true</code> (不区分大小写)</li><li>对 机器人发送的新联系人通知消息 回复 <code>同意</code> 或 <code>不同意</code> 或 <code>拉黑</code> 即可处理，详见 <a href="https://mirai.mamoe.net/topic/972/mirai-administrator-%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%AE%A1%E7%90%86%E6%8F%92%E4%BB%B6-%E5%A5%BD%E5%8F%8B-%E7%BE%A4%E7%AE%A1%E7%90%86-%E9%BB%91%E5%90%8D%E5%8D%95-%E5%AE%B5%E7%A6%81/2?page=1#%E8%81%94%E7%B3%BB%E4%BA%BA%E5%AE%A1%E6%89%B9%E9%85%8D%E7%BD%AE">联系人审批配置</a></li><li><code>permitteeIds</code> 是 权限系统的用户标识符，例如 <code>m12345.6789</code>, 可以提供多个 <a href="https://github.com/mamoe/mirai/blob/dev/mirai-console/docs/Permissions.md#%E8%A2%AB%E8%AE%B8%E5%8F%AF%E4%BA%BA-id">PermitteeId</a> 一次性拉黑&#x2F;取消拉黑</li><li>黑名单通过 <code>@EventHandler(priority = EventPriority.HIGH, concurrency = ConcurrencyKind.LOCKED)</code> 拦截消息</li></ol><h3 id="ADMINFRIENDCOMMAND"><a href="#ADMINFRIENDCOMMAND" class="headerlink" title="ADMINFRIENDCOMMAND"></a>ADMINFRIENDCOMMAND</h3><table><thead><tr><th align="left">Command</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>/&lt;friend&gt; &lt;list&gt;</code></td><td align="left">好友列表</td></tr><tr><td align="left"><code>/&lt;friend&gt; &lt;delete&gt; [friend]</code></td><td align="left">删除好友</td></tr></tbody></table><h3 id="ADMINGROUPCOMMAND"><a href="#ADMINGROUPCOMMAND" class="headerlink" title="ADMINGROUPCOMMAND"></a>ADMINGROUPCOMMAND</h3><table><thead><tr><th align="left">Command</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>/&lt;group&gt; &lt;list&gt;</code></td><td align="left">群列表</td></tr><tr><td align="left"><code>/&lt;group&gt; &lt;member&gt; [group]</code></td><td align="left">群成员</td></tr><tr><td align="left"><code>/&lt;group&gt; &lt;quit&gt; [group]</code></td><td align="left">退出群聊</td></tr><tr><td align="left"><code>/&lt;group&gt; &lt;kick&gt; [member] [reason]? [black]?</code></td><td align="left">踢出群员</td></tr><tr><td align="left"><code>/&lt;group&gt; &lt;nick&gt; [member] [nick]</code></td><td align="left">群昵称</td></tr><tr><td align="left"><code>/&lt;group&gt; &lt;title&gt; [member] [title]</code></td><td align="left">群头衔</td></tr><tr><td align="left"><code>/&lt;group&gt; &lt;mute&gt; [member] [second]</code></td><td align="left">禁言</td></tr><tr><td align="left"><code>/&lt;group&gt; &lt;quiet&gt; [group] [open]?</code></td><td align="left">全体禁言</td></tr><tr><td align="left"><code>/&lt;group&gt; &lt;admin&gt; [member] [operation]?</code></td><td align="left">设置管理员</td></tr><tr><td align="left"><code>/&lt;group&gt; &lt;announce&gt; [group]</code></td><td align="left">设置公告</td></tr><tr><td align="left"><code>/&lt;group&gt; &lt;rank&gt; [group] &#123;levels&#125;</code></td><td align="left">设置等级头衔</td></tr></tbody></table><h3 id="ADMINRECALLCOMMAND"><a href="#ADMINRECALLCOMMAND" class="headerlink" title="ADMINRECALLCOMMAND"></a>ADMINRECALLCOMMAND</h3><table><thead><tr><th align="left">Command</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>/&lt;recall&gt; [contact]?</code></td><td align="left">撤回消息</td></tr></tbody></table><ol><li>不指定<code>contact</code>时，可以通过<strong>回复消息</strong>指定要撤销的消息，如果没有指定，将尝试撤销最后一条不是由指令发送者发送的消息</li><li><code>contact</code>是群员时，将尝试撤销这个群员的最后一条消息</li><li><code>contact</code>是群或好友时，将尝试撤销bot的最后一条消息</li></ol><h3 id="ADMINREGISTEREDCOMMAND"><a href="#ADMINREGISTEREDCOMMAND" class="headerlink" title="ADMINREGISTEREDCOMMAND"></a>ADMINREGISTEREDCOMMAND</h3><table><thead><tr><th align="left">Command</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>/&lt;registered&gt;</code></td><td align="left">查看已注册指令</td></tr><tr><td align="left"><code>/&lt;reg&gt;</code></td><td align="left">查看已注册指令</td></tr></tbody></table><h3 id="ADMINSENDCOMMAND"><a href="#ADMINSENDCOMMAND" class="headerlink" title="ADMINSENDCOMMAND"></a>ADMINSENDCOMMAND</h3><table><thead><tr><th align="left">Command</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>/&lt;send&gt; &lt;groups&gt; [bot]? [at]? [second]?</code></td><td align="left">发送给所有群</td></tr><tr><td align="left"><code>/&lt;send&gt; &lt;friends&gt; [bot]? [second]?</code></td><td align="left">发送给所有好友</td></tr><tr><td align="left"><code>/&lt;send&gt; &lt;to&gt; [contact] [at]?</code></td><td align="left">发送给指定联系人</td></tr><tr><td align="left"><code>/&lt;send&gt; &lt;nudge&gt; [user]</code></td><td align="left">戳一戳指定联系人</td></tr><tr><td align="left"><code>/&lt;send&gt; &lt;log&gt; &#123;addresses&#125;</code></td><td align="left">备份日志到邮箱</td></tr></tbody></table><ol><li><code>bot</code> 参数在命令行模式下需要指定</li><li><code>at</code> 参数为 <code>true</code>, <code>yes</code>, <code>enabled</code>, <code>on</code>, <code>1</code> 时表示 <code>true</code>, 将附加一个At</li><li><code>second</code> 参数为 延迟的秒数 例如 <code>/send groups 123456 false 10</code></li><li><code>addresses</code> 参数为 邮箱地址</li></ol><h3 id="ADMINTIMERCOMMAND"><a href="#ADMINTIMERCOMMAND" class="headerlink" title="ADMINTIMERCOMMAND"></a>ADMINTIMERCOMMAND</h3><table><thead><tr><th align="left">Command</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>/&lt;timer&gt; &lt;config&gt;</code></td><td align="left">显示当前设置</td></tr><tr><td align="left"><code>/&lt;timer&gt; &lt;mute&gt; [moment] [cron] [group]?</code></td><td align="left">宵禁</td></tr><tr><td align="left"><code>/&lt;timer&gt; &lt;cleaner&gt; [day] [cron] [group]?</code></td><td align="left">清理不发言</td></tr><tr><td align="left"><code>/&lt;timer&gt; &lt;status&gt; [cron] [bot]?</code></td><td align="left">定时发送机器人状态</td></tr><tr><td align="left"><code>/&lt;timer&gt; &lt;message&gt; [cron] [target] [at]</code></td><td align="left">定时发送消息</td></tr></tbody></table><ol><li><code>group</code> 为 要操作的群，在群聊中可以不指定</li><li><code>cron</code>, 为 CRON 表达式, 由 <code>秒 分钟 小时 日 月 周</code> 组成<br>例如 <code>0 0 1 * * ?</code> 表示每天 01:00 执行一次，<code>0 30 2 ? * 2-6</code> 表示星期一至星期五 每天 02:30 执行一次<br>可以使用在线编辑器生成 <a href="https://www.bejson.com/othertools/cron/">https://www.bejson.com/othertools/cron/</a><br>为防止被 空格 分成多个参数，请使用 <code>&quot;</code> 包裹参数</li><li><code>moment</code> 为 DURATION 表达式, 由 <code>PnDTnHnMn.nS</code> 组成<br>例如 <code>P1DT2H3M4.5S</code> 表示 一天二小时三分钟四点五秒，<code>PT5H</code> 表示 五小时</li><li>mute 指令，moment 小于 <code>0</code> 宵禁就会关闭<br>例如 <code>/timer mute PT5H &quot;0 0 1 ? * 2-6&quot;</code>, 将会在 星期一到星期五的凌晨01:00 禁言 5 小时<br>例如 <code>/timer mute PT0S &quot;0 0 0 1 * ?&quot;</code>, 将会 取消 禁言定时器</li><li>day 单位为天数的发言期限, 小于 <code>0</code> 宵禁就会关闭<br>例如 <code>/timer cleaner 365 &quot;0 0 12 ? * 0&quot;</code>, 将会 取消 禁言定时器</li></ol><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="联系人审批配置"><a href="#联系人审批配置" class="headerlink" title="联系人审批配置"></a>联系人审批配置</h3><ol><li><code>AdminAutoApproverConfig.yml</code></li></ol><h3 id="禁言自动退群配置"><a href="#禁言自动退群配置" class="headerlink" title="禁言自动退群配置"></a>禁言自动退群配置</h3><ol><li><code>AdminAutoQuitConfig.yml</code></li><li><code>mute_limit</code> 大于这个设置秒数的禁言会触发自动退群</li></ol><h3 id="留言配置"><a href="#留言配置" class="headerlink" title="留言配置"></a>留言配置</h3><ol><li><code>AdminCommentConfig.yml</code></li><li><code>xyz.cssxsh.mirai.plugin.mirai-administrator:comment.include</code> 作用: 拥有此权限的用户，可以给机器人留言</li></ol><h3 id="机器人上线消息配置"><a href="#机器人上线消息配置" class="headerlink" title="机器人上线消息配置"></a>机器人上线消息配置</h3><ol><li><code>AdminOnlineMessageConfig.yml</code></li><li><code>xyz.cssxsh.mirai.plugin.mirai-administrator:online.include</code> 作用: 拥有此权限的群，会发送上线通知</li></ol><h3 id="消息审查及机器人所有者"><a href="#消息审查及机器人所有者" class="headerlink" title="消息审查及机器人所有者"></a>消息审查及机器人所有者</h3><ol><li><code>AdminSetting.yml</code></li><li><code>censor_types</code> 可选值 <code>IMAGE, FLASH, SERVICE, APP, AUDIO, FORWARD, VIP, MARKET, MUSIC, POKE</code></li><li>正则词库, 须手动添加，将会加载 censor 文件夹中的 txt 文件，每一行对应一个正则匹配，会监听文件改动，无需重启</li></ol><h3 id="邮件配置"><a href="#邮件配置" class="headerlink" title="邮件配置"></a>邮件配置</h3><ol><li><code>AdminMailConfig.yml</code> 配置一些默认的发送对象</li><li><code>admin.mail.properties</code> 配置邮箱账号等</li></ol><p>格式参考</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">mail.host</span>=<span class="hljs-string">smtp.mail.qq.com</span><br><span class="hljs-attr">mail.auth</span>=<span class="hljs-string">true</span><br><span class="hljs-attr">mail.user</span>=<span class="hljs-string">xxx</span><br><span class="hljs-attr">mail.password</span>=<span class="hljs-string">***</span><br><span class="hljs-attr">mail.from</span>=<span class="hljs-string">cssxsh@qq.com</span><br><span class="hljs-attr">mail.store.protocol</span>=<span class="hljs-string">smtp</span><br><span class="hljs-attr">mail.transport.protocol</span>=<span class="hljs-string">smtp</span><br><span class="hljs-comment"># smtp</span><br><span class="hljs-attr">mail.smtp.starttls.enable</span>=<span class="hljs-string">true</span><br><span class="hljs-attr">mail.smtp.auth</span>=<span class="hljs-string">true</span><br><span class="hljs-attr">mail.smtp.timeout</span>=<span class="hljs-string">15000</span><br></code></pre></td></tr></table></figure><p>QQ邮箱帮助： <a href="https://service.mail.qq.com/cgi-bin/help?subtype=1&&id=28&&no=1001256">https://service.mail.qq.com/cgi-bin/help?subtype=1&amp;&amp;id=28&amp;&amp;no=1001256</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Mirai-Administrator&quot;&gt;&lt;a href=&quot;#Mirai-Administrator&quot; class=&quot;headerlink&quot; title=&quot;Mirai Administrator&quot;&gt;&lt;/a&gt;Mirai Administrator&lt;/h1&gt;&lt;bloc</summary>
      
    
    
    
    <category term="QQbot" scheme="https://w1ndys.github.io/categories/QQbot/"/>
    
    
    <category term="QQbot" scheme="https://w1ndys.github.io/tags/QQbot/"/>
    
  </entry>
  
  <entry>
    <title>DS作业-7-Ch5-22网安物联网-20231113</title>
    <link href="https://w1ndys.github.io/2023/11/18/DS_homework_7_Ch5_22wanganwulian_20231113/"/>
    <id>https://w1ndys.github.io/2023/11/18/DS_homework_7_Ch5_22wanganwulian_20231113/</id>
    <published>2023-11-18T07:27:00.469Z</published>
    <updated>2023-11-18T08:30:43.316Z</updated>
    
    <content type="html"><![CDATA[<p>图片加载不出来请点开看</p><p><img src="https://cyberdownload.anrunlu.net/FgJCJvVyhScTveE9fHtuBktOu4oB" srcset="/img/loading.gif" lazyload alt="img"></p><h1 id="11题"><a href="#11题" class="headerlink" title="11题"></a>11题</h1><blockquote><p>假设用于通讯的电文由 8 个字母组成，ABCDEFGH ，字母在电文中 的出现频率分别为 0.07,0.19,0.02,0.06,0.32,0.03,0.21,0.10,试设计 Huffman 编码。</p></blockquote><blockquote><p>bing写的……</p></blockquote><p>以下是一个使用C++实现Huffman编码的代码，这个代码创建了一个Huffman树，并为每个字符生成了一个二进制编码。这个代码更加简洁，适合初学者理解：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">ElemType</span> &#123;<br>    <span class="hljs-type">int</span> weight;<br>    <span class="hljs-type">int</span> parent, lchild, rchild;<br>&#125;;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">HuffmanTree</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-built_in">HuffmanTree</span>(<span class="hljs-type">int</span> w[], <span class="hljs-type">int</span> n);<br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Print</span><span class="hljs-params">()</span></span>;<br><span class="hljs-keyword">private</span>:<br>    ElemType *huffTree;<br>    <span class="hljs-type">int</span> num;<br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Select</span><span class="hljs-params">(<span class="hljs-type">int</span> n, <span class="hljs-type">int</span> &amp;i1, <span class="hljs-type">int</span> &amp;i2)</span></span>;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">HuffmanTree::Select</span><span class="hljs-params">(<span class="hljs-type">int</span> n, <span class="hljs-type">int</span> &amp;i1, <span class="hljs-type">int</span> &amp;i2)</span> </span>&#123;<br>    <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>, temp;<br>    <span class="hljs-keyword">for</span> (; i &lt; n; i++)<br>        <span class="hljs-keyword">if</span> (huffTree[i].parent == <span class="hljs-number">-1</span>) &#123;i1 = i; <span class="hljs-keyword">break</span>;&#125;<br>    <span class="hljs-keyword">for</span> (i = i + <span class="hljs-number">1</span>; i &lt; n; i++)<br>        <span class="hljs-keyword">if</span> (huffTree[i].parent == <span class="hljs-number">-1</span>) &#123;i2 = i;<span class="hljs-keyword">break</span>;&#125;    <br>    <span class="hljs-keyword">if</span> (huffTree[i1].weight &gt; huffTree[i2].weight) &#123;<br>        temp = i1; i1 = i2;i2 = temp;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (i = i + <span class="hljs-number">1</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-keyword">if</span> (huffTree[i].parent == <span class="hljs-number">-1</span>) &#123;<br>            <span class="hljs-keyword">if</span> (huffTree[i].weight &lt; huffTree[i1].weight) &#123;<br>                i2 = i1; i1 = i;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (huffTree[i].weight &lt; huffTree[i2].weight) &#123;<br>                i2 = i;<br>            &#125;<br>        &#125;<br>    &#125;    <br>&#125;<br><br>HuffmanTree::<span class="hljs-built_in">HuffmanTree</span>(<span class="hljs-type">int</span> w[], <span class="hljs-type">int</span> n) &#123;<br>    <span class="hljs-type">int</span> i, k, i1, i2;<br>    huffTree = <span class="hljs-keyword">new</span> ElemType [<span class="hljs-number">2</span>*n<span class="hljs-number">-1</span>];<br>    num = n;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">2</span>*num<span class="hljs-number">-1</span>; i++) &#123;<br>        huffTree[i].parent = <span class="hljs-number">-1</span>;<br>        huffTree[i].lchild = huffTree[i].rchild = <span class="hljs-number">-1</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; num; i++) &#123;<br>        huffTree[i].weight = w[i];<br>    &#125;<br>    <span class="hljs-keyword">for</span> (k = num; k &lt; <span class="hljs-number">2</span>*num<span class="hljs-number">-1</span>; k++) &#123;<br>        <span class="hljs-built_in">Select</span>(k, i1, i2);<br>        huffTree[k].weight = huffTree[i1].weight + huffTree[i2].weight;<br>        huffTree[i1].parent = k; huffTree[i2].parent = k; <br>        huffTree[k].lchild = i1; huffTree[k].rchild = i2;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">HuffmanTree::Print</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> i, k;<br>    cout &lt;&lt; <span class="hljs-string">&quot;每个叶子到根结点的路径是:&quot;</span> &lt;&lt; endl; <br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; num; i++) &#123;<br>        cout &lt;&lt; huffTree[i].weight;<br>        k = huffTree[i].parent;<br>        <span class="hljs-keyword">while</span> (k != <span class="hljs-number">-1</span>) &#123;<br>            cout &lt;&lt; <span class="hljs-string">&quot;--&gt;&quot;</span> &lt;&lt; huffTree[k].weight;<br>            k = huffTree[k].parent;<br>        &#125;<br>        cout &lt;&lt; endl;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> w[] = &#123;<span class="hljs-number">7</span>, <span class="hljs-number">19</span>, <span class="hljs-number">2</span>, <span class="hljs-number">6</span>, <span class="hljs-number">32</span>, <span class="hljs-number">3</span>, <span class="hljs-number">21</span>, <span class="hljs-number">10</span>&#125;;<br>    <span class="hljs-function">HuffmanTree <span class="hljs-title">T</span><span class="hljs-params">(w, <span class="hljs-number">8</span>)</span></span>;<br>    T.<span class="hljs-built_in">Print</span>();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>这段代码首先计算每个字符的频率，然后使用优先队列（最小堆）来创建Huffman树。然后，它遍历Huffman树以生成Huffman编码。最后，它打印出每个字符及其对应的Huffman编码。</p><p>请注意，这只是一个基本的实现，可能需要根据您的具体需求进行修改和优化。例如，您可能需要将字符频率作为输入参数，而不是在代码中硬编码。此外，这个代码没有进行错误处理，也没有释放动态分配的内存。在实际使用中，您需要确保代码的健壮性和效率。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;图片加载不出来请点开看&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cyberdownload.anrunlu.net/FgJCJvVyhScTveE9fHtuBktOu4oB&quot; srcset=&quot;/img/loading.gif&quot; lazyload alt=&quot;img&quot;</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://w1ndys.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="数据结构作业" scheme="https://w1ndys.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="课后作业" scheme="https://w1ndys.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%9C%E4%B8%9A/%E8%AF%BE%E5%90%8E%E4%BD%9C%E4%B8%9A/"/>
    
    
    <category term="数据结构作业" scheme="https://w1ndys.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>“卷卷”W1ndys-bot使用手册</title>
    <link href="https://w1ndys.github.io/2023/11/18/bot_W1ndys_bot/"/>
    <id>https://w1ndys.github.io/2023/11/18/bot_W1ndys_bot/</id>
    <published>2023-11-18T02:04:26.275Z</published>
    <updated>2023-12-13T12:54:24.339Z</updated>
    
    <content type="html"><![CDATA[<h1 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h1><p>卷卷目前的功能主要有：<br><a href="#%E5%85%B3%E9%94%AE%E8%AF%8D%E5%9B%9E%E5%A4%8D">关键词回复</a>      <a href="#%E5%BF%AB%E6%8D%B7%E7%BE%A4%E7%AE%A1%E7%90%86">快捷群管理</a>     <a href="#%E8%BF%9D%E7%A6%81%E8%AF%8D%E7%9B%91%E6%8E%A7">违禁词监控</a>    <a href="#%E5%AE%9A%E6%97%B6%E5%99%A8">定时器</a>     <a href="#%E5%A5%87%E6%80%AA%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90">奇怪图片生成</a>     <a href="#%E7%82%B9%E6%AD%8C">点歌</a>   <a href="#%E7%8C%9C%E7%BE%A4%E5%8F%8B">猜群友小游戏</a></p><p><a href="https://w1ndys.top/2023/12/13/bot-ChatLearning/#/">ChatLearning————学群友说话使用手册</a></p><p><a href="https://w1ndys.top/2023/11/20/bot-Mirai-Administrator/">Mirai Administrator使用手册</a></p><p><a href="https://w1ndys.top/2023/11/17/bot-HuYanSession2/">HuYanSession2——壶言会话2使用手册</a></p><p><a href="https://w1ndys.top/2023/12/06/bot-MuteGames/">MuteGames使用手册</a></p><h1 id="关键词回复"><a href="#关键词回复" class="headerlink" title="关键词回复"></a>关键词回复</h1><p>相关指令<a href="https://w1ndys.top/2023/11/17/bot-HuYanSession2#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9B%9E%E5%A4%8D">请看这里</a></p><h1 id="快捷群管理"><a href="#快捷群管理" class="headerlink" title="快捷群管理"></a>快捷群管理</h1><p>相关指令<a href="https://w1ndys.top/2023/11/17/bot-HuYanSession2/#%E7%BE%A4%E7%AE%A1%E7%90%86">请看这里</a></p><h1 id="违禁词监控"><a href="#违禁词监控" class="headerlink" title="违禁词监控"></a>违禁词监控</h1><p>相关指令<a href="https://w1ndys.top/2023/11/17/bot-HuYanSession2/#%E8%BF%9D%E7%A6%81%E8%AF%8D">请看这里</a></p><h1 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h1><p>相关指令<a href="https://w1ndys.top/2023/11/17/bot-HuYanSession2/#%E5%AE%9A%E6%97%B6%E5%99%A8">请看这里</a></p><h1 id="奇怪图片生成"><a href="#奇怪图片生成" class="headerlink" title="奇怪图片生成"></a>奇怪图片生成</h1><p>发送<code>pet</code>可以查看具体指令</p><p>根据提示操作即可</p><h1 id="点歌"><a href="#点歌" class="headerlink" title="点歌"></a>点歌</h1><h2 id="“-音乐-关键词”"><a href="#“-音乐-关键词”" class="headerlink" title="“#音乐 关键词”"></a>“#音乐 关键词”</h2><p>自动搜索所有源以找出来找最佳音频来源</p><h2 id="“-语音-关键词”"><a href="#“-语音-关键词”" class="headerlink" title="“#语音 关键词”"></a>“#语音 关键词”</h2><p>自动搜索所有源，以语音信息的形式发出</p><h2 id="“-外链-关键词”"><a href="#“-外链-关键词”" class="headerlink" title="“#外链 关键词”"></a>“#外链 关键词”</h2><p>自动搜索所有源，以外链信息的形式发出</p><h2 id="“-QQ-关键词”"><a href="#“-QQ-关键词”" class="headerlink" title="“#QQ 关键词”"></a>“#QQ 关键词”</h2><p>搜索QQ音乐</p><h2 id="“-网易-关键词”"><a href="#“-网易-关键词”" class="headerlink" title="“#网易 关键词”"></a>“#网易 关键词”</h2><p>搜索网易云音乐</p><h2 id="“-网易电台-关键词”"><a href="#“-网易电台-关键词”" class="headerlink" title="“#网易电台 关键词”"></a>“#网易电台 关键词”</h2><p>搜索网易云电台，一般来说是直接选择找到的第一个节目，但是关键词可以以 “电台名称|节目名称”的格式指定电台节目</p><h2 id="“-酷狗-关键词”"><a href="#“-酷狗-关键词”" class="headerlink" title="“#酷狗 关键词”"></a>“#酷狗 关键词”</h2><p>搜索酷狗音乐</p><h2 id="“-千千-关键词”"><a href="#“-千千-关键词”" class="headerlink" title="“#千千 关键词”"></a>“#千千 关键词”</h2><p>搜索千千音乐（百度音乐）</p><h1 id="猜群友"><a href="#猜群友" class="headerlink" title="猜群友"></a>猜群友</h1><p>命令：</p><p><code>#猜群友 开始</code>或者<code>#猜群友 paly</code>（因为开发者打错字了所以不是play）</p><p><code>#猜群友 guess@</code>或者<code>#猜群友 猜@</code></p><h1 id="MuteGames"><a href="#MuteGames" class="headerlink" title="MuteGames"></a>MuteGames</h1><p>一个以 <a href="https://github.com/mamoe/mirai">Mirai-Console</a> 为基础开发并为了满足群友PVP需求和抖M需求开发的禁言游戏集合</p><h1 id="群词云生成器"><a href="#群词云生成器" class="headerlink" title="群词云生成器"></a><a href="https://mirai.mamoe.net/topic/959/wordcloudplugin-%E7%BE%A4%E8%AF%8D%E4%BA%91%E7%94%9F%E6%88%90%E5%99%A8">群词云生成器</a></h1><p>使用方法:在群内发送 <code>本日词云</code>&#x2F;<code>昨日词云</code>&#x2F;<code>获取词云 </code>来使用<br>也可以发送 <code>用户本日词云</code>&#x2F;<code>用户昨日词云</code>&#x2F;<code>获取用户词云</code> +<code>&lt;用户名称&gt;</code> 来获取指定用户的词云<br>在config下timer文件可以配置定时任务<br>更多功能可查看配置文件</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;主要功能&quot;&gt;&lt;a href=&quot;#主要功能&quot; class=&quot;headerlink&quot; title=&quot;主要功能&quot;&gt;&lt;/a&gt;主要功能&lt;/h1&gt;&lt;p&gt;卷卷目前的功能主要有：&lt;br&gt;&lt;a href=&quot;#%E5%85%B3%E9%94%AE%E8%AF%8D%E5%9B%9E%</summary>
      
    
    
    
    <category term="QQbot" scheme="https://w1ndys.github.io/categories/QQbot/"/>
    
    
    <category term="QQbot" scheme="https://w1ndys.github.io/tags/QQbot/"/>
    
  </entry>
  
  <entry>
    <title>HuYanSession2——壶言会话2使用手册</title>
    <link href="https://w1ndys.github.io/2023/11/17/bot_HuYanSession2/"/>
    <id>https://w1ndys.github.io/2023/11/17/bot_HuYanSession2/</id>
    <published>2023-11-16T16:42:39.786Z</published>
    <updated>2023-11-18T05:29:27.646Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://mirai.mamoe.net/topic/1377/%E5%A3%B6%E8%A8%802-huyansession2-%E5%A3%B6%E8%A8%80%E4%BC%9A%E8%AF%9D2">壶言手册发布页</a></p><h2 id="自定义回复"><a href="#自定义回复" class="headerlink" title="自定义回复"></a><strong>自定义回复</strong></h2><p><code>权限id：session</code></p><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>所有自定义回复都会携带作用域和匹配方式参数！<br>支持更简洁的输入且都是可选！默认为<code>精准</code>和<code>全局</code>！</p><p><code>[]</code>和<code>()</code>指数学中的域，在本插件表示<code>可填写</code>和<code>必填写</code>；<br><code>|</code>为或，表示两边都可以用；</p><p><strong>以下所有指令均适用于此表示方法!</strong></p><ul><li><code>[精准|1]</code> 精准匹配</li><li><code>[模糊|2]</code> 模糊匹配</li><li><code>[头部|3]</code> 头部匹配</li><li><code>[结尾|4]</code> 结尾匹配</li><li><code>[全局|0]</code> 全局匹配</li><li><code>[当前|-1]</code> 当前群匹配</li><li><code>[群组(id)|gr(id)]</code> 指定群组匹配</li></ul><p>具体参数含义可以去壶言1查看</p><hr><h3 id="一对一回复-会话"><a href="#一对一回复-会话" class="headerlink" title="一对一回复(会话)"></a>一对一回复(会话)</h3><p><code>权限id：sessionx</code></p><p>直接上指令</p><table><thead><tr><th align="left">指令</th><th align="left">含义</th><th align="left">案例</th><th align="left">中文格式</th></tr></thead><tbody><tr><td align="left"><code>xx (触发内容) (回复内容) [参数]</code></td><td align="left">快速添加关键字回复 参数可多填，以空格隔开</td><td align="left"><code>xx 怎么办 凉拌 2 0</code></td><td align="left"><code>学习 怎么办 凉拌 模糊 全局</code></td></tr><tr><td align="left"><code>xx：[触发内容]</code></td><td align="left">查询所有已保存的关键词回复,冒号中英都支持，后续的触发内容填上就是查询对应的那条</td><td align="left"><code>xx:</code></td><td align="left"><code>查询 怎么办</code></td></tr><tr><td align="left"><code>-xx：(触发内容)</code></td><td align="left">删除对应的关键词</td><td align="left"><code>-xx:怎么办</code></td><td align="left"><code>删除 怎么办</code></td></tr><tr><td align="left"><code>%xx</code></td><td align="left">通过多次消息发送的形式添加对话,便于手机使用</td><td align="left"><code>%xx</code></td><td align="left"><code>学习对话</code></td></tr><tr><td align="left"><code>-%xx</code></td><td align="left">由于多次消息形式添加的对话的触发词可能含有空格，因此要用对应的方式删除</td><td align="left"><code>-%xx</code></td><td align="left"><code>删除对话</code></td></tr></tbody></table><p>学习对话参数：</p><ul><li><code>0 | 全局</code> 修改触发作用域为这个机器人的所有群</li><li><code>1 | 精准</code> 只有发的消息跟触发词相同，才能触发回复，<code>不填写参数默认</code></li><li><code>2 | 模糊</code> 发送消息包含触发词即可触发。</li><li><code>3 | 头部</code> 发送消息的开头为触发词即可触发</li><li><code>4 | 结尾</code> 发送消息的结尾为触发词即可触发</li><li><code>5 | 正则</code> 以正则匹配触发消息，仅限<code>%xx</code>学习功能</li><li><code>-1 | 当前</code> 修改触发作用域为当期这个群，<code>不填写参数默认</code></li><li><code>gr(id) | 群组(id)</code> 修改作用域为对应的群组id，()不是指令，只是说明这个<code>id</code>必须填写，群组的使用方式在下方</li></ul><p>所有参数都在聊天指令的结尾以<code>(空格)(参数)</code>添加，无序。</p><p>对话和多词条支持的动态消息：</p><p>欢迎词支持的动态消息:</p><table><thead><tr><th align="left">动态消息类型</th><th align="left">动态消息参数</th><th align="left">含义</th><th align="left">案例</th><th align="left">匹配结果</th></tr></thead><tbody><tr><td align="left"><code>at</code></td><td align="left"><code>this</code></td><td align="left">@(at)触发这条消息的人</td><td align="left"><code>$at(this)</code></td><td align="left">@放空</td></tr><tr><td align="left"></td><td align="left"><code>qq</code></td><td align="left">@群里的这个人，会固定@这个人</td><td align="left"><code>$at(572490972)</code></td><td align="left">@放空</td></tr><tr><td align="left"><code>message</code></td><td align="left"><code>this</code></td><td align="left">这个人触发这条消息的内容</td><td align="left"><code>$message(this)</code></td><td align="left">不会写插件怎么办？</td></tr><tr><td align="left"><code>user</code></td><td align="left"><code>name</code></td><td align="left">获取这个人的名称</td><td align="left"><code>$user(name)</code></td><td align="left">放空</td></tr><tr><td align="left"></td><td align="left"><code>id</code></td><td align="left">获取这个人的qq</td><td align="left"><code>$user(id)</code></td><td align="left">572490972</td></tr><tr><td align="left"></td><td align="left"><code>avatar</code></td><td align="left">获取这个人的头像</td><td align="left"><code>$user(avatar)</code></td><td align="left">[图片]</td></tr><tr><td align="left"></td><td align="left"><code>title</code></td><td align="left">获取这个人的头衔，优先获取特殊头衔</td><td align="left"><code>$user(title)</code></td><td align="left">才不是放空了~</td></tr><tr><td align="left"></td><td align="left"><code>info</code></td><td align="left">详细信息??</td><td align="left"><code>$user(info)</code></td><td align="left"></td></tr><tr><td align="left"><code>time</code></td><td align="left"><code>now</code></td><td align="left">获取当前时间，默认格式<code>yyyy-MM-dd HH:mm:ss</code></td><td align="left"><code>$time(now)</code></td><td align="left">2022-8-28 02:15:15</td></tr><tr><td align="left"></td><td align="left"><code>(时间格式)</code></td><td align="left">按照指定的时间格式进行现在的时间输出</td><td align="left"><code>$time(HH:mm:ss)</code></td><td align="left">02:16:20</td></tr></tbody></table><hr><h3 id="正则消息回流-仅限一对一回复"><a href="#正则消息回流-仅限一对一回复" class="headerlink" title="正则消息回流(仅限一对一回复)"></a>正则消息回流(仅限一对一回复)</h3><p>请以<code>%xx</code>学习，学习内容为<code>(你的正则1)</code>，与之对应的回复内容为<code>$mate(1)</code>，<br>参数为5，也就是正则匹配，1对应第一个括号匹配的内容。</p><p>案例：</p><p>与之类似的，你只需要更改括号中正则，就可以达到你想要的东西。</p><hr><h3 id="一对多回复-多词条"><a href="#一对多回复-多词条" class="headerlink" title="一对多回复(多词条)"></a>一对多回复(多词条)</h3><p><code>权限id：sessiondct</code><br>指令:</p><table><thead><tr><th align="left">指令</th><th align="left">含义</th><th align="left">案例</th><th align="left">中文格式</th></tr></thead><tbody><tr><td align="left"><code>%dct</code></td><td align="left">添加多词条</td><td align="left"><code>%dct</code></td><td align="left"><code>添加多词条</code></td></tr><tr><td align="left"><code>dct:</code></td><td align="left">查询所有多词条</td><td align="left"><code>%dct</code></td><td align="left"><code>查询多词条</code></td></tr><tr><td align="left"><code>-dct:(id) [id]</code></td><td align="left">删除多词条，id通过查询得到，第一个id是对应的多次条id，第二个id是对应回复语句id，如果填写，就是删除这个多次回复语句下的这条回复，支持空格隔开一次删除多条</td><td align="left"><code>-dct：5</code></td><td align="left"><code>删除：2 34 44 23</code></td></tr></tbody></table><p>在添加多词条消息的途中，<br>发送</p><ul><li><code>!!! | ！！！</code> 结束添加，不进行保存，直接结束这次操作</li><li><code>!! | ！！</code> 在循环添加回复内容时，停止添加，退出进行多词条消息的保存</li><li><code>! | ！</code> 删除上一条添加的内容</li></ul><p>添加多词条参数：</p><ul><li><code>1 | 精准</code> 只有发的消息跟触发词相同，才能触发回复，<code>不填写参数默认</code></li><li><code>2 | 模糊</code> 发送消息包含触发词即可触发。</li><li><code>3 | 头部</code> 发送消息的开头为触发词即可触发</li><li><code>4 | 结尾</code> 发送消息的结尾为触发词即可触发</li><li><code>lx | 轮询</code> 多个词条回复的顺序为轮询，就是一条一条发送去,<code>不填写参数默认</code></li><li><code>sj | 随机</code> 修改回复顺序为随机,就是触发后随机从多词条中取一条拿来回复</li><li><code>0 | 全局</code> 修改触发作用域为这个机器人的所有群</li><li><code>gr(id) | 群组(id)</code> 修改作用域为对应的群组id，()不是指令，只是说明这个<code>id</code>必须填写</li></ul><p>单个多词条回复语句也支持动态消息，具体支持看上面的对话动态消息支持</p><hr><h2 id="群组"><a href="#群组" class="headerlink" title="群组"></a>群组</h2><p><code>权限id：list</code><br>用于设定特定几个群的群组系统，用于一些东西只在这几个群中触发，其他插件有个相反的功能叫群黑名单，我这个是正向的，只在那些群触发。</p><p>指令：</p><table><thead><tr><th align="left">指令</th><th align="left">含义</th><th align="left">案例</th><th align="left">中文格式</th></tr></thead><tbody><tr><td align="left"><code>+gr:(id) (群号)</code></td><td align="left">添加多个群为一个群组，群号支持多个</td><td align="left"><code>+gr：1 780594692</code></td><td align="left"><code>添加群组：1 780594692 390444068</code></td></tr><tr><td align="left"><code>gr:[id]</code></td><td align="left">查询所有群组信息，id填写后只查询对应的id所属群组信息</td><td align="left"><code>gr：</code></td><td align="left"><code>查询群组：1</code></td></tr><tr><td align="left"><code>-gr:(id) [群号]</code></td><td align="left">删除这个群组里面的某个群号，支持多个群号</td><td align="left"><code>-gr:1</code></td><td align="left"><code>删除群组：1 390444068 780594692</code></td></tr></tbody></table><p>与之类似，你只需要更换你的正则匹配就可以</p><hr><h2 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">权限<span class="hljs-built_in">id</span>：ds<br></code></pre></td></tr></table></figure><p>定时任务是指，按照指定的时间频率发送对应的消息，时间频率是<a href="http://cron.ciding.cc/#/">cron表达式</a>，不懂的人可以花5分钟了解一下，基本能满足任何时间频率<br>cron输入格式<code>$cron(* * * * * ?)</code></p><h3 id="定时管理"><a href="#定时管理" class="headerlink" title="定时管理"></a>定时管理</h3><p>指令:</p><table><thead><tr><th align="left">指令</th><th align="left">含义</th><th align="left">案例</th><th align="left">中文格式</th></tr></thead><tbody><tr><td align="left"><code>%ds</code></td><td align="left">添加定时任务，具体根据提示进行添加</td><td align="left"><code>%ds</code></td><td align="left">&#96;添加定时器</td></tr><tr><td align="left"><code>-ds(id)</code></td><td align="left">删除定时任务，id查询获得</td><td align="left"><code>-ds：1</code></td><td align="left">&#96;删除定时器：1</td></tr></tbody></table><p>在添加回复消息的途中，<br>发送</p><ul><li><code>!!! | ！！！</code> 结束添加，不进行保存，直接结束这次操作</li><li><code>!! | ！！</code> 在循环添加回复内容时，停止添加，退出进行定时任务的保存</li><li><code>! | ！</code> 删除上一条添加的内容</li></ul><p>定时任务的参数：</p><ul><li><code>hf | 回复</code> 定时器触发后只回复一条消息，<code>不填参数默认</code></li><li><code>lx | 轮询</code> 定时器的回复内容将成为多词条的样式，并且回复词条顺序为轮询，与随机冲突！</li><li><code>sj | 随机</code> 定时器的回复内容将成为多词条的样式，并且回复词条顺序为随机，与轮询冲突！</li><li><code>-1 | 当前</code> 作用域-当前这个群 <code>默认</code></li><li><code>0 | 全局</code> 作用域-全部群</li><li><code>gr(id) | 群组(id)</code> 作用域-指定群组</li></ul><h3 id="定时器操作"><a href="#定时器操作" class="headerlink" title="定时器操作"></a>定时器操作</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">权限<span class="hljs-built_in">id</span>：dscz<br></code></pre></td></tr></table></figure><table><thead><tr><th align="left">指令</th><th align="left">含义</th><th align="left">案例</th><th align="left">中文格式</th></tr></thead><tbody><tr><td align="left"><code>ds:</code></td><td align="left">查询定时任务</td><td align="left"><code>ds：</code></td><td align="left">&#96;查询定时器</td></tr><tr><td align="left"><code>%ds:(id)</code></td><td align="left">切换定时任务的状态，如果已经开启，则切换为关闭，id查询获取</td><td align="left"><code>%ds:1</code></td><td align="left">&#96;切换定时器:1</td></tr></tbody></table><hr><h2 id="群管理"><a href="#群管理" class="headerlink" title="群管理"></a>群管理</h2><p><code>权限id：group</code> <strong>此权限不是指令权限</strong></p><p>对于几个检测群的功能，需要先将对于群添加为检测群</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">/hy agroup (群号) <span class="hljs-comment">#添加</span><br>/hy dgroup (群号) <span class="hljs-comment">#删除</span><br></code></pre></td></tr></table></figure><p>依然支持在config文件手动添加</p><hr><h3 id="特殊头衔"><a href="#特殊头衔" class="headerlink" title="特殊头衔"></a>特殊头衔</h3><p>当你的机器人是群主时才可以使用,拥有<code>admin</code>、<code>group</code>权限的用户也可以用于使用。</p><p>指令：</p><table><thead><tr><th align="left">指令</th><th align="left">含义</th><th align="left">案例</th><th align="left">中文格式</th></tr></thead><tbody><tr><td align="left"><code>%@(user) (内容)</code></td><td align="left">给这个人修改特殊头衔</td><td align="left"><code>%@放空 才不是放空了~</code></td><td align="left"><code>设置头衔@放空 才不是放空了~</code></td></tr></tbody></table><p>是群主才行哦~</p><hr><h3 id="群欢迎词"><a href="#群欢迎词" class="headerlink" title="群欢迎词"></a>群欢迎词</h3><p><code>权限id：grouphyc</code><br>当有人申请的时候，拥有管理员权限的机器人并且加入了检测的群<br>机器人会给出提示<br>在配置文件中有是否启用开关</p><p>指令：</p><table><thead><tr><th align="left">指令</th><th align="left">含义</th><th align="left">案例</th><th align="left">中文格式</th></tr></thead><tbody><tr><td align="left">&#96;开门 id</td><td align="left">all&#96;</td><td align="left">同意这个人的进群申请</td><td align="left"><code>开门 1</code></td></tr><tr><td align="left">&#96;同意 id</td><td align="left">all&#96;</td><td align="left">同意这个人的进群申请</td><td align="left"><code>同意 1</code></td></tr><tr><td align="left">&#96;关门 id</td><td align="left">all&#96;</td><td align="left">关门这个人的进群申请</td><td align="left"><code>关门 1</code></td></tr><tr><td align="left">&#96;拒绝 id</td><td align="left">all&#96;</td><td align="left">拒绝这个人的进群申请</td><td align="left"><code>拒绝 1</code></td></tr></tbody></table><p>id是进群时所提示的门牌号</p><p>欢迎词功能不需要检测群支持！<br>欢迎词指令：</p><table><thead><tr><th align="left">指令</th><th align="left">含义</th><th align="left">案例</th><th align="left">中文格式</th></tr></thead><tbody><tr><td align="left"><code>%hyc</code></td><td align="left">添加欢迎词</td><td align="left"><code>%hyc</code></td><td align="left"><code>添加欢迎词</code></td></tr><tr><td align="left"><code>hyc：</code></td><td align="left">查询欢迎词词</td><td align="left"><code>hyc:</code></td><td align="left"><code>查询欢迎词</code></td></tr><tr><td align="left"><code>-hyc:(id) [id]</code></td><td align="left">删除欢迎，id查询获得，第二个id是对应的欢迎词集合中的某条欢迎词，不支持多条删除</td><td align="left"><code>-hyc：2</code></td><td align="left"><code>删除欢迎词：1 15</code></td></tr></tbody></table><p>参数:</p><ul><li><code>lx | 轮询</code> 欢迎词将以轮询的方式逐条发送，<code>默认</code></li><li><code>sj | 随机</code> 欢迎词将随机发送</li><li><code>0 | 全局</code> 作用域：全局</li><li><code>gr(id) | 群组(id)</code> 作用域：群组</li></ul><p>欢迎词支持的动态消息:</p><table><thead><tr><th align="left">动态消息类型</th><th align="left">动态消息参数</th><th align="left">含义</th><th align="left">案例</th><th align="left">匹配结果</th></tr></thead><tbody><tr><td align="left"><code>at</code></td><td align="left"><code>this</code></td><td align="left">@(at)这个进群的人</td><td align="left"><code>$at(this)</code></td><td align="left">@放空</td></tr><tr><td align="left"></td><td align="left"><code>that</code></td><td align="left">这个要请他的人，如果没有邀请的人则会at同意他进来的那个人</td><td align="left"><code>$at(that)</code></td><td align="left">@放空</td></tr><tr><td align="left"></td><td align="left"><code>qq</code></td><td align="left">@群里的这个人，会固定@这个人</td><td align="left"><code>$at(572490972)</code></td><td align="left">@放空</td></tr><tr><td align="left"><code>message</code></td><td align="left"><code>apply</code></td><td align="left">获取这个人进群申请的消息</td><td align="left"><code>$message(apply)</code></td><td align="left">这个人什么都没说…</td></tr><tr><td align="left"><code>user</code></td><td align="left"><code>name</code></td><td align="left">获取这个人进群时的名称</td><td align="left"><code>$user(name)</code></td><td align="left">放空</td></tr><tr><td align="left"></td><td align="left"><code>id</code></td><td align="left">获取这个人的qq</td><td align="left"><code>$user(id)</code></td><td align="left">572490972</td></tr><tr><td align="left"></td><td align="left"><code>avatar</code></td><td align="left">获取这个人的头像</td><td align="left"><code>$user(avatar)</code></td><td align="left">[图片]</td></tr><tr><td align="left"><code>time</code></td><td align="left">所有支持动态消息的都支持时间，具体用法在文档前面的对话</td><td align="left"></td><td align="left"></td><td align="left"></td></tr></tbody></table><hr><h3 id="禁言"><a href="#禁言" class="headerlink" title="禁言"></a>禁言</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">权限<span class="hljs-built_in">id</span>：groupjy<br></code></pre></td></tr></table></figure><p>此指令只有在你的机器人是管理员或群主才能触发</p><p>指令：</p><table><thead><tr><th align="left">指令</th><th align="left">含义</th><th align="left">案例</th><th align="left">中文格式</th></tr></thead><tbody><tr><td align="left"><code>@某人(禁言时间)</code></td><td align="left">在机器人有权限的情况下，对你@的这个人进行指定时间的禁言</td><td align="left"><code>@放空 3m</code></td><td align="left">&#96;&#96;</td></tr><tr><td align="left"><code>@某人 0s</code></td><td align="left">解除禁言</td><td align="left"><code>@放空</code></td><td align="left">&#96;&#96;</td></tr></tbody></table><p>时间频率：</p><ul><li><code>s</code> 秒</li><li><code>m</code> 分钟</li><li><code>h</code> 小时</li><li><code>d</code> 天</li></ul><hr><h3 id="违禁词"><a href="#违禁词" class="headerlink" title="违禁词"></a>违禁词</h3><p>不需要检测群支持。<br>此指令只有在你的机器人是管理员或群主才能起作用。</p><p>指令：</p><table><thead><tr><th align="left">指令</th><th align="left">含义</th><th align="left">案例</th><th align="left">中文格式</th></tr></thead><tbody><tr><td align="left"><code>+wjc:(内容) [param]</code></td><td align="left">添加违禁词，内容是触发内容，param是参数，具体可以查看下方</td><td align="left"><code>+wjc:色图 ch 2m</code></td><td align="left"><code>添加违禁词：色图 % jy</code></td></tr><tr><td align="left"><code>-wjc:(id)</code></td><td align="left">删除违禁词，id查询获得</td><td align="left"><code>-wjc：2</code></td><td align="left"><code>删除违禁词：2</code></td></tr><tr><td align="left"><code>wjc：</code></td><td align="left">查询所有违禁词</td><td align="left"><code>wjc：</code></td><td align="left"><code>查询违禁词</code></td></tr></tbody></table><h4 id="参数的意义"><a href="#参数的意义" class="headerlink" title="参数的意义"></a>参数的意义</h4><ul><li><code>ch</code> 违禁词默认撤回，当输入ch后，wjc将不撤回消息</li><li><code>jy</code> 违禁词默认禁言，当输入jy后，wjc将不禁言</li><li><code>3s</code> 修改禁言时间,具体时间格式<a href="#%E7%A6%81%E8%A8%80">查看禁言</a></li><li><code>%</code> 重写回复语句,支持动态消息，具体支持动态消息查看下方</li><li><code>[gr1 | 0 ]</code> 群组或全局，默认当前群</li><li><code>1,2,3,4</code> 匹配方式，跟关键词回复的匹配同理</li><li><code>hmd3</code> 开启触发3次后就会踢出群聊，数字可自选</li></ul><p>hmd参数输入后，将会开启小黑屋功能，不会提示！当某个人触发这个wjc到达次数，直接踢出本群，可以和下面的自动添加黑名单配合！</p><p>违禁词回复消息支持动态消息：</p><table><thead><tr><th align="left">动态消息类型</th><th align="left">动态消息参数</th><th align="left">含义</th><th align="left">案例</th><th align="left">匹配结果</th></tr></thead><tbody><tr><td align="left"><code>at</code></td><td align="left"><code>this</code></td><td align="left">@(at)触发这条消息的人</td><td align="left"><code>$at(this)</code></td><td align="left">@放空</td></tr><tr><td align="left"></td><td align="left"><code>qq</code></td><td align="left">@群里的这个人，会固定@这个人</td><td align="left"><code>$at(572490972)</code></td><td align="left">@放空</td></tr><tr><td align="left"><code>message</code></td><td align="left"><code>this</code></td><td align="left">这个人触发这条消息的内容</td><td align="left"><code>$message(this)</code></td><td align="left">不会写插件怎么办？</td></tr><tr><td align="left"></td><td align="left"><code>jyString</code></td><td align="left">这条违禁词的禁言时间中文</td><td align="left"><code>$message(jyString)</code></td><td align="left">禁言2分钟</td></tr><tr><td align="left"></td><td align="left"><code>prohibitString</code></td><td align="left">同上</td><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"><code>null</code></td><td align="left">不发送消息</td><td align="left"><code>$message(null)</code></td><td align="left"></td></tr><tr><td align="left"><code>user</code></td><td align="left"><code>name</code></td><td align="left">获取这个人的名称</td><td align="left"><code>$user(name)</code></td><td align="left">放空</td></tr><tr><td align="left"></td><td align="left"><code>id</code></td><td align="left">获取这个人的qq</td><td align="left"><code>$user(id)</code></td><td align="left">572490972</td></tr><tr><td align="left"></td><td align="left"><code>avatar</code></td><td align="left">获取这个人的头像</td><td align="left"><code>$user(avatar)</code></td><td align="left">[图片]</td></tr><tr><td align="left"></td><td align="left"><code>title</code></td><td align="left">获取这个人的头衔，优先获取特殊头衔</td><td align="left"><code>$user(title)</code></td><td align="left">才不是放空了~</td></tr><tr><td align="left"></td><td align="left"><code>info</code></td><td align="left">详细信息??</td><td align="left"><code>$user(info)</code></td><td align="left"></td></tr><tr><td align="left"><code>time</code></td><td align="left"><code>now</code></td><td align="left">获取当前时间，默认格式<code>yyyy-MM-dd HH:mm:ss</code></td><td align="left"><code>$time(now)</code></td><td align="left">2022-8-28 02:15:15</td></tr><tr><td align="left"></td><td align="left"><code>(时间格式)</code></td><td align="left">按照指定的时间格式进行现在的时间输出</td><td align="left"><code>$time(HH:mm:ss)</code></td><td align="left">02:16:20</td></tr></tbody></table><hr><h3 id="黑名单"><a href="#黑名单" class="headerlink" title="黑名单"></a>黑名单</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">权限<span class="hljs-built_in">id</span>：grouphmd<br></code></pre></td></tr></table></figure><p>不需要检测群支持。<br>此指令只有在你的机器人是管理员或群主才能触发。<br>支持作用域！！设置为全局时，该用户将被你的bot封禁！</p><table><thead><tr><th align="left">指令</th><th align="left">含义</th><th align="left">案例</th><th align="left">中文格式</th></tr></thead><tbody><tr><td align="left"><code>+hmd:@(user) [param]</code></td><td align="left">添加黑名单，参数看下方</td><td align="left"><code>+hmd:@放空 jy</code></td><td align="left"><code>添加黑名单:@放空 %</code></td></tr><tr><td align="left"><code>hmd:</code></td><td align="left">查询黑名单</td><td align="left"><code>hmd:</code></td><td align="left"><code>查询黑名单</code></td></tr><tr><td align="left"><code>-hmd:(id)</code></td><td align="left">删除黑名单,id查询获得</td><td align="left"><code>-hmd:3</code></td><td align="left"><code>删除黑名单:2</code></td></tr></tbody></table><p>参数：</p><ul><li><code>t</code> 默认检测到就踢出，携带参数不踢出</li><li><code>jy</code> 默认禁言(优先踢出),携带参数不禁言</li><li><code>ch</code> 默认撤回该用户的消息，携带不提出</li><li><code>0 | gr(id)</code> 作用域不携带参数<code>默认当前群</code></li><li><code>%</code> 重写封禁理由</li></ul><p>此功能需要检测群支持！<br>在配置文件blacklist有退群自动添加黑名单开关！<br>里面还有重写封禁理由！</p><hr><h3 id="撤回消息"><a href="#撤回消息" class="headerlink" title="撤回消息"></a>撤回消息</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">权限<span class="hljs-built_in">id</span>：groupch<br></code></pre></td></tr></table></figure><p>用于撤回上面的群消息，机器人是管理员和群主才能使用</p><p>指令：</p><table><thead><tr><th align="left">指令</th><th align="left">含义</th><th align="left">案例</th><th align="left">中文格式</th></tr></thead><tbody><tr><td align="left"><code>!recall</code></td><td align="left">撤回上面这条消息</td><td align="left"><code>!recall</code></td><td align="left"><code>撤回</code></td></tr><tr><td align="left"><code>！recall (number)</code></td><td align="left">撤回前面几条消息，不包含这条消息</td><td align="left"><code>！recall 5</code></td><td align="left"><code>撤回 5</code></td></tr><tr><td align="left"><code>!recall 1-5</code></td><td align="left">撤回上面1到5条，从第0条算起，包含这条消息</td><td align="left"><code>!recall 1-5</code></td><td align="left"><code>撤回 25-55</code></td></tr></tbody></table><p>具体用法试一试就明白，撤回多条消息时，权限可能会有冲突。</p><hr><h3 id="踢人"><a href="#踢人" class="headerlink" title="踢人"></a>踢人</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">权限<span class="hljs-built_in">id</span>：grouptr<br></code></pre></td></tr></table></figure><p>此指令只有在你的机器人是管理员或群主才能触发</p><table><thead><tr><th align="left">指令</th><th align="left">含义</th><th align="left">案例</th><th align="left">中文格式</th></tr></thead><tbody><tr><td align="left"><code>tr@(user) [hmd]</code></td><td align="left">踢人</td><td align="left"><code>tr@放空</code></td><td align="left"><code>踢人@放空</code></td></tr></tbody></table><p>参数：</p><ul><li><code>hmd</code> qq的踢人有个禁止此用户再次加群，输入后将禁止此用户再次加群</li></ul><hr><h2 id="权限系统"><a href="#权限系统" class="headerlink" title="权限系统"></a>权限系统</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">权限<span class="hljs-built_in">id</span>：admin<br></code></pre></td></tr></table></figure><p>指令：</p><table><thead><tr><th align="left">指令</th><th align="left">含义</th><th align="left">案例</th><th align="left">中文格式</th></tr></thead><tbody><tr><td align="left"><code>+@(user) (权限id)</code></td><td align="left">赋予这个群的这个人的某个权限,权限id可在文档查看</td><td align="left"><code>+@放空 admin</code></td><td align="left"><code>添加@放空 all</code></td></tr><tr><td align="left"><code>-@(user)</code></td><td align="left">移除这个权限</td><td align="left"><code>-@放空 all</code></td><td align="left"><code>删除@放空 group</code></td></tr><tr><td align="left"><code>！power [param]</code></td><td align="left">查询权限列表，参数如下</td><td align="left"><code>!power all</code></td><td align="left"><code>权限列表 all</code></td></tr></tbody></table><p>参数：</p><ul><li>&#96;&#96;不填默认当前群</li><li><code>@某人</code> 查看指定人在本群的权限</li><li><code>all</code> 查询所有权限或添加所有权限或删除所有权限</li></ul><p>查询可以输入对应的群号 或者 qq号 来查询指定区域的权限信息<br>也可以直接 all 查询全部<br>然后通过 <code>上一页</code> 和 <code>下一页</code> 来进行翻译阅读</p><hr><h2 id="多机器人互冲"><a href="#多机器人互冲" class="headerlink" title="多机器人互冲"></a>多机器人互冲</h2><p>对于同时加载多个bot的使用者<br>容易存在一条指令两个bot触发，因此，加了一个‘暂停功能’</p><p>指令：</p><table><thead><tr><th align="left">指令</th><th align="left">含义</th><th align="left">案例</th><th align="left">中文格式</th></tr></thead><tbody><tr><td align="left"><code>！pause @(bot)</code></td><td align="left">你发的下一条消息，这个机器人将会忽略(包括触发)</td><td align="left"><code>！pause@乌拉</code></td><td align="left"></td></tr><tr><td align="left"><code>!pause @(bot) 5</code></td><td align="left">忽略下5条消息，消息数量自定</td><td align="left"><code>！pause @乌拉 5</code></td><td align="left"></td></tr></tbody></table><p>不带参数，默认忽略你的下一条消息<br>也可以自定义忽略下几条消息，这个记录是写在内存的，如果不小心输入多了（9999999999），重启就行。</p><hr><h2 id="插件指令"><a href="#插件指令" class="headerlink" title="插件指令"></a>插件指令</h2><table><thead><tr><th align="left">指令</th><th align="left">含义</th><th align="left">案例</th></tr></thead><tbody><tr><td align="left"><code>/hy aGroup</code></td><td align="left">添加一个监测群</td><td align="left"><code>/hy aGroup 390444068</code></td></tr><tr><td align="left"><code>/hy dGroup</code></td><td align="left">删除一个监测群</td><td align="left"><code>/hy dGroup 390444068</code></td></tr><tr><td align="left"><code>/hy v</code></td><td align="left">查询当前插件版本</td><td align="left"><code>/hy v</code></td></tr><tr><td align="left"><code>/hy transfer</code></td><td align="left">转移一个所属bot的数据到另一个bot</td><td align="left"><code>/hy transfer 2061954151 3630254205</code></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://mirai.mamoe.net/topic/1377/%E5%A3%B6%E8%A8%802-huyansession2-%E5%A3%B6%E8%A8%80%E4%BC%9A%E8%AF%9D2&quot;&gt;壶言手册发布页&lt;/a&gt;&lt;/p&gt;
&lt;h2 </summary>
      
    
    
    
    <category term="QQbot" scheme="https://w1ndys.github.io/categories/QQbot/"/>
    
    
    <category term="QQbot" scheme="https://w1ndys.github.io/tags/QQbot/"/>
    
  </entry>
  
</feed>
